<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kap.service.dao.eb.EBBEpisdMapper">
	<!--
		쿼리명 : EBACouseMapper.selectEpisdList
		설  명 : 교육차수 목록을 조회한다.
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.15    김학규       최초생성
    -->
	<select id="selectEpisdList" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		SELECT /*EBBEpisdMapper.selectEpisdList*/
				edctn_seq
				, episd_year
				, episd_ord
				, parnt_seq
				, (select cd_nm from co_code_mst WHERE cd_seq = aa.parnt_seq) AS prnt_cd_nm
				, ctgry_cd
				, ctgry_cd_nm
		     	, cbsn_cd
				, nm
				, stduy_mthd_cd
				, stduy_mthd_cd_nm
				, stduy_dd_cd
				, stduy_dd_cd_nm
				, stduy_time_cd
				, stduy_time_cd_nm
				, episd_year
				, episd_ord
				, accs_strt_dtm
				, accs_end_dtm
				, case
					when NOW() <![CDATA[<]]> accs_strt_dtm then '접수대기'
					when NOW() <![CDATA[>]]> accs_strt_dtm AND NOW() <![CDATA[<]]>  accs_end_dtm then '접수중'
					when NOW() <![CDATA[>]]> accs_end_dtm OR (fxnum_impsb_yn = 'N' AND accs_cnt <![CDATA[>=]]> fxnum_cnt) then '마감'
					END  AS accs_status_nm
				, edctn_strt_dtm
				, edctn_end_dtm
				, case
					when NOW() <![CDATA[<]]> edctn_strt_dtm then '교육대기'
					when NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm then '교육중'
					when NOW() <![CDATA[>]]> edctn_end_dtm then '교육마감'
				END  AS edctn_status_nm
				, (SELECT NAME FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS isttr_name
				, (SELECT ffltn_nm FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS ffltn_nm
				, case when isttr_cnt <![CDATA[<=]]>1 then ''
					when isttr_cnt <![CDATA[>]]>  1 then isttr_cnt-1
					END isttr_out_cnt
				, fxnum_cnt
				, accs_cnt
				, rcrmt_mthd_cd
				, rcrmt_mthd_cd_nm
				, pic_nm
				, pic_email
				, pic_tel_no
				, place_seq
		     	, place_nm
				, reg_id
				, reg_name
				, reg_dtm
				, mod_id
				, mod_name
		     	, mod_dtm
				, exps_yn
			FROM (SELECT
				b.edctn_seq
				, b.ctgry_cd
				, a.cbsn_cd
				, (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) as ctgry_cd_nm
				, (select parnt_seq from co_code_mst WHERE cd = b.ctgry_cd) as parnt_seq
				, b.nm
				, b.stduy_mthd_cd
				, (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm
				, b.stduy_dd_cd
				, (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) as stduy_dd_cd_nm
				, b.stduy_time_cd
				, (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm
				, a.episd_year
				, a.episd_ord
				, a.accs_strt_dtm
				, a.accs_end_dtm
				, a.edctn_strt_dtm
				, a.edctn_end_dtm
				, (SELECT min(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS min_isttr_seq
				, (SELECT COUNT(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS isttr_cnt
				, a.fxnum_cnt
				, a.fxnum_impsb_yn
				, (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord) AS accs_cnt
				, a.rcrmt_mthd_cd
				, (select cd_nm from co_code_mst where cd=a.rcrmt_mthd_cd) as rcrmt_mthd_cd_nm
				, a.pic_nm
				, a.pic_email
				, a.pic_tel_no
				, a.place_seq
				, (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as place_nm
				, a.reg_id
				, (select name from co_adm_mst where id = a.reg_id) as reg_name
				, a.reg_dtm
				, a.mod_id
				, (select name from co_adm_mst where id = a.reg_id) as mod_name
				, a.mod_dtm
			    , a.exps_yn
				FROM ed_edctn_episd_mst a
				LEFT JOIN ed_edctn_prcs_mst b ON a.edctn_seq = b.edctn_seq
			<include refid="selectLecturerEpisdListSql" />
		) AA

		<include refid="selectEpisdListwhereSql" />

		order by
			reg_dtm desc

			limit #{firstIndex}, #{recordCountPerPage}
	</select>

	<!--
		쿼리명 : EBACouseMapper.selectCouseListCnt
		설  명 : 교육차수 목록을 조회한다. (카운트)
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.15    김학규       최초생성
    -->
	<select id="selectEpisdListCnt" parameterType="EBBEpisdDTO" resultType="java.lang.Integer">
		SELECT /*EBACouseMapper.selectEpisdListCnt*/
			count(*)
		FROM (SELECT
		b.edctn_seq
		, b.ctgry_cd
		, (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) as ctgry_cd_nm
		, (select parnt_seq from co_code_mst WHERE cd = b.ctgry_cd) as parnt_seq
		, b.nm
		, b.stduy_mthd_cd
		, (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm
		, b.stduy_dd_cd
		, (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) as stduy_dd_cd_nm
		, stduy_time_cd
		, (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm
		, a.episd_year
		, a.episd_ord
		, a.accs_strt_dtm
		, a.accs_end_dtm
		, a.edctn_strt_dtm
		, a.edctn_end_dtm
		, (SELECT min(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS min_isttr_seq
		, (SELECT COUNT(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS isttr_cnt
		, a.fxnum_cnt
		, a.fxnum_impsb_yn
		, (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord) AS accs_cnt
		, a.rcrmt_mthd_cd
		, (select cd_nm from co_code_mst where cd=a.rcrmt_mthd_cd) as rcrmt_mthd_cd_nm
		, a.pic_nm
		, a.pic_email
		, a.pic_tel_no
		, a.place_seq
		, (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as place_nm
		, a.exps_yn
		, a.reg_id
		, (select name from co_adm_mst where id = a.reg_id) as reg_name
		, a.reg_dtm
		, a.mod_id
		, (select name from co_adm_mst where id = a.reg_id) as mod_name
		, a.mod_dtm
		FROM ed_edctn_episd_mst a
		LEFT JOIN ed_edctn_prcs_mst b ON a.edctn_seq = b.edctn_seq
		<include refid="selectLecturerEpisdListSql" />
		) AA
		<include refid="selectEpisdListwhereSql" />
	</select>

	<!--
		쿼리명 : selectEpisdListwhereSql
		설  명 : 교육차수 where Sql
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.15    김학규       최초생성
    -->
	<sql id="selectEpisdListwhereSql">
		<where>
			<!--등록일/수정기간-->
			<if test="strtDt != null and strtDt != ''">
				<choose>
					<when test="srchDate == 1">
						AND REG_DTM <![CDATA[>=]]> DATE_FORMAT(#{strtDt}, '%Y-%m-%d 00:00:00')
						AND REG_DTM <![CDATA[<=]]> DATE_FORMAT(#{endDt}, '%Y-%m-%d 23:59:59')
					</when>
					<when test="srchDate == 2">
						AND MOD_DTM <![CDATA[>=]]> DATE_FORMAT(#{strtDt}, '%Y-%m-%d 00:00:00')
						AND MOD_DTM <![CDATA[<=]]> DATE_FORMAT(#{endDt}, '%Y-%m-%d 23:59:59')
					</when>
				</choose>
			</if>

			<!--과정분류-->
			<if test="ctgryCdList != null and ctgryCdList.size() > 0">
				and (
				<foreach collection="ctgryCdList" item="ctgryCdList" index="index" open="" close="" separator=" or ">
					ctgry_cd = #{ctgryCdList}
				</foreach>
				)
			</if>
			<!--학습방식 -->
			<if test="stduyMthdCdList != null and stduyMthdCdList.size() > 0">
				and (
				<foreach collection="stduyMthdCdList" item="stduyMthdCdList" index="index" open="" close="" separator=" or ">
					stduy_mthd_cd = #{stduyMthdCdList}
				</foreach>
				)
			</if>

			<!-- 학습일 -->
			<if test="stduyDdCd != null and stduyDdCd != ''">
				AND stduy_dd_cd = #{stduyDdCd}
			</if>
			<!-- 학습시간 -->
			<if test="stduyTimeCd != null and stduyTimeCd != ''">
				AND stduy_time_cd = #{stduyTimeCd}
			</if>

			<!-- 모집방식 -->
			<if test="rcrmtMthdCdList != null and rcrmtMthdCdList.size() > 0">
				and (
				<foreach collection="rcrmtMthdCdList" item="rcrmtMthdCdList" index="index" open="" close="" separator=" or ">
					rcrmt_mthd_cd = #{rcrmtMthdCdList}
				</foreach>
				)
			</if>

			<!--접수상태-->
			<if test="accsStatusList != null and accsStatusList.size() > 0">
				and (
				<foreach collection="accsStatusList" item="accsStatusList" index="index" open="" close="" separator=" or ">
					<choose>
						<when test="accsStatusList != null">
							<if test="accsStatusList == 1"><!--접수대기-->
								NOW() <![CDATA[<]]> accs_strt_dtm
							</if>
							<if test="accsStatusList == 2"><!--접수중-->
								NOW() <![CDATA[>]]> accs_strt_dtm AND NOW() <![CDATA[<]]>  accs_end_dtm
							</if>
							<if test="accsStatusList == 3"><!--마감-->
								(NOW() <![CDATA[>]]> accs_end_dtm OR (fxnum_impsb_yn = 'N' AND accs_cnt <![CDATA[>=]]> fxnum_cnt))
							</if>
						</when>

					</choose>
				</foreach>
				)
			</if>

			<!--접수상태-->
			<if test="edctnStatusList != null and edctnStatusList.size() > 0">
				and (
				<foreach collection="edctnStatusList" item="edctnStatusList" index="index" open="" close="" separator=" or ">
					<choose>
						<when test="edctnStatusList != null">
							<if test="edctnStatusList == 1"><!--접수대기-->
								NOW() <![CDATA[<]]> edctn_strt_dtm
							</if>
							<if test="edctnStatusList == 2"><!--접수중-->
								NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm
							</if>
							<if test="edctnStatusList == 3"><!--마감-->
								(NOW() <![CDATA[>]]> edctn_end_dtm)
							</if>
						</when>
					</choose>
				</foreach>
				)
			</if>

			<!--노출여부-->
			<if test="expsYnList != null and expsYnList.size() > 0">
				AND (
				<foreach collection="expsYnList" item="expsYn" index="index" open="" close="" separator=" OR ">
					EXPS_YN = #{expsYn}
				</foreach>
				)
			</if>

			<if test="q != null and q != ''.toString() ">
				<choose>
					<when test="f == 1"><!-- 과정명 -->
						and nm like concat('%', #{q}, '%')
					</when>
					<when test="f == 2"><!--최초수정자-->
						AND (
						INSTR(#{q}, aa.REG_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.REG_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0)
						)
					</when>
					<when test="f == 3"><!--최종수정자-->
						AND (
						INSTR(#{q}, aa.MOD_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.MOD_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0)
						)
					</when>
					<otherwise><!--전체수정자-->
						AND (
						INSTR(#{q}, nm) <![CDATA[>]]> 0 OR
						INSTR(#{q}, REG_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.REG_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0) OR
						INSTR(#{q}, MOD_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.MOD_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0)
						)
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>

	<!--
		쿼리명 : selectLecturerEpisdListSql
		설  명 : 강사 관리 상세에서 교육 사업 현황 조회 조인 Sql
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.23    구은희       최초생성
    -->
	<sql id="selectLecturerEpisdListSql">
		<if test="isttrSeq != null and isttrSeq != ''">
			INNER JOIN
			(
			SELECT
			edctn_seq
			, episd_year
			, episd_ord
			, isttr_seq
			FROM ed_edctn_isttr_rel
			) C
			ON 1 = 1
			AND A.edctn_seq = C.edctn_seq
			AND A.episd_year = C.episd_year
			AND A.episd_ord = C.episd_ord
			AND C.isttr_seq = #{isttrSeq}
		</if>
	</sql>

	<!--
      쿼리명 : EBBEpisdMapper.selectLctrDtlList
      설  명 : 교육강의상세목록를 출력한다
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.02   김학규       최초생성
 	-->
	<select id="selectLctrDtlList" parameterType="EBBLctrDTO" resultType="EBBLctrDTO">
		select /* EBBEpisdMapper.selectLctrDtlList */
			edctn_seq
			, episd_ord
			, lctr_seq
			, episd_year
			, nm
			, url
			, time
			, thnl_file_seq
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		from ed_edctn_lctr_dtl where 1=1
		and edctn_seq = #{edctnSeq}
		and episd_ord = #{episdOrd}
		and episd_year = #{episdYear}
	</select>


	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdDtl
      설  명 : 교육차수 상세를 조회한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.02   김학규       최초생성
 	-->
	<select id="selectEpisdDtl" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		SELECT /*EBBEpisdMapper.selectEpisdDtl*/
			edctn_seq
			 , episd_year
			 , episd_ord
			 , episd_seq
			 , parnt_seq
			 , (select cd_nm from co_code_mst WHERE cd_seq = aa.parnt_seq) AS prnt_cd_nm
		     , jdgmt_yn
			 , ctgry_cd
			 , ctgry_cd_nm
		     , cbsn_cd
			 , (select cd_nm from co_code_mst WHERE cd = aa.cbsn_cd) AS cbsn_cd_nm
			 , nm
			 , stduy_mthd_cd
			 , stduy_mthd_cd_nm
			 , stduy_dd_cd
			 , stduy_dd_cd_nm
			 , stduy_time_cd
			 , stduy_time_cd_nm
			 , episd_year
			 , episd_ord
			 , accs_strt_dtm
			 , accs_end_dtm
			 , case
				   when NOW() <![CDATA[<]]> accs_strt_dtm then '접수대기'
				   when NOW() <![CDATA[>]]> accs_strt_dtm AND NOW() <![CDATA[<]]>  accs_end_dtm then '접수중'
				   when NOW() <![CDATA[>]]> accs_end_dtm OR (fxnum_impsb_yn = 'N' AND accs_cnt <![CDATA[>=]]> fxnum_cnt) then '마감'
			END  AS accs_status_nm
			 , edctn_strt_dtm
			 , edctn_end_dtm
			 , edctn_ntctn_file_seq
			 , case
				   when NOW() <![CDATA[<]]> edctn_strt_dtm then '교육대기'
				   when NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm then '교육중'
				   when NOW() <![CDATA[>]]> edctn_end_dtm then '교육마감'
			END  AS edctn_status_nm
			 , (SELECT NAME FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS isttr_name
			 , (SELECT ffltn_nm FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS ffltn_nm
			 , case when isttr_cnt <![CDATA[<=]]>1 then ''
					when isttr_cnt <![CDATA[>]]>  1 then isttr_cnt-1
			END isttr_out_cnt
			 , fxnum_cnt
		     , fxnum_impsb_yn
			 , accs_cnt
			 , rcrmt_mthd_cd
			 , rcrmt_mthd_cd_nm
			 , pic_nm
			 , pic_email
			 , pic_tel_no
			 , place_seq
			 , srv_seq
		     , srv_strt_dtm
		     , srv_end_dtm
		     , srv_nm
		     , (SELECT CD_NM FROM CO_CODE_MST WHERE CD = AA.type_cd) AS TYPE_NM
		     , srv_mem_cnt
		     , edctn_mem_cnt
			 , exam_seq
		     , exam_nm
			 , exam_strt_dtm
			 , exam_end_dtm
		     , otsd_exam_ptcpt_yn
		     , cprtn_instt_nm
			 , place_nm
			 , reg_id
			 , reg_name
			 , reg_dtm
			 , mod_id
			 , mod_name
		     , cmptn_auto_yn
			 , exps_yn
		FROM (SELECT
				  b.edctn_seq
		           , a.episd_seq
				   , b.ctgry_cd
		           , a.cbsn_cd
				   , (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) as ctgry_cd_nm
				   , (select parnt_seq from co_code_mst WHERE cd = b.ctgry_cd) as parnt_seq
		           , b.jdgmt_yn
				   , b.nm
				   , b.stduy_mthd_cd
				   , (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm
				   , b.stduy_dd_cd
				   , (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) as stduy_dd_cd_nm
				   , b.stduy_time_cd
				   , (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm
				   , a.episd_year
				   , a.episd_ord
				   , a.accs_strt_dtm
				   , a.accs_end_dtm
				   , a.edctn_strt_dtm
				   , a.edctn_end_dtm
		           , a.edctn_ntctn_file_seq
				   , (SELECT min(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS min_isttr_seq
				   , (SELECT COUNT(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS isttr_cnt
				   , a.fxnum_cnt
				   , a.fxnum_impsb_yn
				   , (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord) AS accs_cnt
				   , a.rcrmt_mthd_cd
				   , (select cd_nm from co_code_mst where cd=a.rcrmt_mthd_cd) as rcrmt_mthd_cd_nm
				   , a.pic_nm
				   , a.pic_email
				   , a.pic_tel_no
				   , a.place_seq
				   , a.srv_seq
		           , (select type_cd from sv_mst where srv_seq = a.srv_seq) as type_cd
				   , a.srv_strt_dtm
				   , a.srv_end_dtm
		           , (select titl from sv_mst where srv_seq = a.srv_seq) as srv_nm
				   , (select COUNT(mem_seq) from sv_rspn_mst WHERE srv_seq = a.srv_seq) AS srv_mem_cnt /*설문 참여자수*/
				   , (SELECT COUNT(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord) AS edctn_mem_cnt
				   , a.exam_seq
		           , a.exam_strt_dtm
		           , a.exam_end_dtm
		           , a.otsd_exam_ptcpt_yn
				   , (SELECT titl FROM ex_exam_mst WHERE exam_seq = A.exam_seq) as exam_nm
		           , cprtn_instt_nm
				   , (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as place_nm
				   , a.reg_id
				   , (select name from co_adm_mst where id = a.reg_id) as reg_name
				   , a.reg_dtm
				   , a.mod_id
				   , (select name from co_adm_mst where id = a.reg_id) as mod_name
				   , a.mod_dtm
		           , a.cmptn_auto_yn
				   , a.exps_yn
			  FROM ed_edctn_episd_mst a
					   LEFT JOIN ed_edctn_prcs_mst b ON a.edctn_seq = b.edctn_seq) AA
		where
			edctn_seq = #{detailsKey}
			and episd_year = #{episdYear}
		    and episd_ord = #{episdOrd}
	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdChk
      설  명 : 교육과정 상세를 조회한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.02   김학규       최초생성
 	-->
	<select id="selectEpisdChk" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		select * /* EBBEpisdMapper.selectEpisdChk */
		from ed_edctn_episd_mst
		where
		edctn_seq = #{edctnSeq}
		and episd_year = #{episdYear}
		and episd_ord = #{episdOrd}
	</select>

	<!--
         쿼리명 : EBBEpisdMapper.insertEpisd
         설  명 : 교육차수를 등록한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.02   김학규       최초생성
    -->
	<insert id="insertEpisd" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEpisd*/ ed_edctn_episd_mst (
			edctn_seq
			, episd_year
			, episd_ord
			, episd_seq
			, cbsn_cd
			, accs_strt_dtm
			, accs_end_dtm
			, edctn_strt_dtm
			, edctn_end_dtm
			, fxnum_cnt
			, fxnum_impsb_yn
			, rcrmt_mthd_cd
			, pic_nm
			, pic_email
			, pic_tel_no
			, edctn_ntctn_file_seq
			, place_seq
			, srv_seq
			, srv_strt_dtm
			, srv_end_dtm
			, exam_seq
		  	, exam_strt_dtm
		  	, exam_end_dtm
			, otsd_exam_ptcpt_yn
			, cprtn_instt_nm
			, cmptn_auto_yn
			, edctn_stts_cd
			, exps_yn
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
			) VALUES(
				#{edctnSeq}
				, #{episdYear}
				, #{episdOrd}
				, #{episdSeq}
				, #{cbsnCd}
				, #{accsStrtDtm}
				, #{accsEndDtm}
				, #{edctnStrtDtm}
				, #{edctnEndDtm}
				, #{fxnumCnt}
				, #{fxnumImpsbYn}
				, #{rcrmtMthdCd}
				, #{picNm}
				, #{picEmail}
				, #{picTelNo}
				, #{edctnNtctnFileSeq}
				, #{placeSeq}
				, #{srvSeq}
				, #{srvStrtDtm}
				, #{srvEndDtm}
				, #{examSeq}
				,#{ examStrtDtm}
				, #{examEndDtm}
				, #{otsdExamPtcptYn}
				, #{cprtnInsttNm}
				, #{cmptnAutoYn}
				, #{edctnSttsCd}
				, #{expsYn}
				, #{regId}
				, #{regIp}
				, now()
				, #{modId}
				, #{modIp}
				, now()
			)
	</insert>





	<!--
      쿼리명 : EBBEpisdMapper.selectIsttrList
      설  명 : 교육차수관리 - 강사관계를 호출한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.24   김학규       최초생성
 	-->
	<select id="selectIsttrList" parameterType="EBBEpisdDTO" resultType="EBBIsttrDTO">
		select /*EBBEpisdMapper.selectIsttrList*/
			a.edctn_seq
			 , a.episd_ord
			 , a.isttr_seq
			 , a.episd_year
		     , b.name
			 , b.ffltn_nm
			 , b.pstn_nm
			 , b.dept_nm
		     , b.spcl_cntn
			 , a.reg_id
			 , a.reg_ip
			 , a.reg_dtm
			 , a.mod_id
			 , a.mod_ip
			 , a.mod_dtm
		from ed_edctn_isttr_rel a, cp_isttr_mst b
		where 1=1
		and a.isttr_seq = b.isttr_seq
		and edctn_seq = #{edctnSeq}
		and episd_year = #{episdYear}
		and episd_ord = #{episdOrd}
	</select>


	<!--
         쿼리명 : EBBEpisdMapper.deleteIsttrRel
         설  명 : 교육차수 - 교육강세 관계를 삭제한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.23   김학규       최초생성
    -->
	<delete id="deleteIsttrRel" parameterType="EBBEpisdDTO">
		delete from ed_edctn_isttr_rel where 1=1 /* EBBEpisdMapper.deleteIsttrRel */
										and edctn_seq = #{edctnSeq}
										and episd_ord = #{episdOrd}
										and episd_year = #{episdYear}
	</delete>

	<!--
             쿼리명 : EBBEpisdMapper.insertIsttrRel
             설  명 : 교육차수 - 교육강사관계를 등록한다
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertIsttrRel" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEpisd*/ ed_edctn_isttr_rel (
			edctn_seq
			, episd_ord
			, isttr_seq
			, episd_year
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES
		<foreach collection="isttrSeqList" item="isttrSeqList" index="index" separator=" , " open="" close=";">
		      (
			#{isttrSeqList.edctnSeq}
			, #{isttrSeqList.episdOrd}
			, #{isttrSeqList.isttrSeq}
			, #{isttrSeqList.episdYear}
			, #{regId}
			, #{regIp}
			, now()
			, #{modId}
			, #{modIp}
			, now()
		)
		</foreach>
	</insert>

	<!--
             쿼리명 : EBBEpisdMapper.insertLctrDtl
             설  명 : 교육차수 - 교육강의 상세를 등록한다
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertLctrDtl" parameterType="EBBLctrDTO">
		insert into /*EBBEpisdMapper.insertLctrDtl*/ ed_edctn_lctr_dtl (
			edctn_seq
			, episd_ord
			, lctr_seq
			, episd_year
			, nm
			, url
			, time
			, thnl_file_seq
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES(
			#{edctnSeq}
			, #{episdOrd}
			, #{lctrSeq}
			, #{episdYear}
			, #{nm}
			, #{url}
			, #{time}
			, #{thnlFileSeq}
			, #{regId}
			, #{regIp}
			, now()
			, #{modId}
			, #{modIp}
			, now()
		)
	</insert>

	<!--
         쿼리명 : EBBEpisdMapper.deleteLctrDtl
         설  명 : 교육차수 - 교육강의 상세를 삭제한다
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.23   김학규       최초생성
    -->
	<delete id="deleteLctrDtl" parameterType="EBBEpisdDTO">
		delete from ed_edctn_lctr_dtl where 1=1
		and edctn_seq = #{edctnSeq}
		and episd_ord = #{episdOrd}
		and episd_year = #{episdYear}
	</delete>

	<!--
         쿼리명 : EBBEpisdMapper.updateEpisd
         설  명 : 교육차수를 수정한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.02   김학규       최초생성
    -->
	<update id="updateEpisd" parameterType="EBBEpisdDTO" >

		UPDATE ed_edctn_episd_mst SET /* EBBEpisdMapper.updateEpisd */
			episd_year = #{episdYear}
			, episd_ord = #{episdOrd}
			, cbsn_cd = #{cbsnCd}
			, accs_strt_dtm = #{accsStrtDtm}
			, accs_end_dtm = #{accsEndDtm}
			, edctn_strt_dtm = #{edctnStrtDtm}
			, edctn_end_dtm = #{edctnEndDtm}
			, fxnum_cnt = #{fxnumCnt}
			, fxnum_impsb_yn = #{fxnumImpsbYn}
			, rcrmt_mthd_cd = #{rcrmtMthdCd}
			, pic_nm = #{picNm}
			, pic_email = #{picEmail}
			, pic_tel_no = #{picTelNo}
			, cprtn_instt_nm = #{cprtnInsttNm}
			, edctn_ntctn_file_seq = #{edctnNtctnFileSeq}
			, place_seq = #{placeSeq}
			, srv_seq = #{srvSeq}
			, exam_seq = #{examSeq}
			, srv_strt_dtm = #{srvStrtDtm}
			, srv_end_dtm = #{srvEndDtm}
			, exam_strt_dtm = #{examStrtDtm}
			, exam_end_dtm = #{examEndDtm}
			, cmptn_auto_yn = #{cmptnAutoYn}
			, otsd_exam_ptcpt_yn = #{otsdExamPtcptYn}
			, exps_yn = #{expsYn}
			, mod_id = #{modId}
			, mod_ip = #{modIp}
			, mod_dtm = now()
		where 1=1
			and edctn_seq = #{edctnSeq}
			and episd_year = #{orgEpisdYear}
			and episd_ord = #{orgEpisdOrd}
	</update>

	<!--
         쿼리명 : EBBEpisdMapper.deleteEpisd
         설  명 : 교육차수 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.15   김학규       최초생성
    -->
	<delete id="deleteEpisdDtl" parameterType="EBBEpisdDTO">
		delete from ed_edctn_prcs_mst where 1=1  /* EBBEpisdMapper.deleteEpisdDtl */
		AND edctn_seq IN
		<foreach collection="delValueList" item="delValueList" index="index" separator=", " open="(" close=")">
			#{delValueList}
		</foreach>
	</delete>

	<!--
         쿼리명 : EBBEpisdMapper.deleteBdgetList
         설  명 : 교육차수 - 예산/지출내역 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.15   김학규       최초생성
    -->
	<delete id="deleteBdgetList" parameterType="EBBEpisdDTO">
		delete from ed_edctn_bdget_expns_dtl
	   	where 1=1  /* EBBEpisdMapper.deleteBdgetList */
	   		and edctn_seq = #{edctnSeq}
	   		and episd_ord = #{episdOrd}
	   		and episd_year = #{episdYear}
	</delete>

	<!--
             쿼리명 : EBBEpisdMapper.insertIsttrRel
             설  명 : 교육차수 - 교육강사관계를 등록한다
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertBdgetList" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEpisd*/ ed_edctn_bdget_expns_dtl (
			edctn_seq
			, episd_ord
			, cd
			, episd_year
			, pmt
			, etc_nm
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES
		<foreach collection="bdgetList" item="bdgetList" index="index" separator=" , " open="" close=";">
			(
			#{bdgetList.edctnSeq}
			, #{bdgetList.episdOrd}
			, #{bdgetList.cd}
			, #{bdgetList.episdYear}
			, #{bdgetList.pmt}
			, #{bdgetList.etcNm}
			, #{regId}
			, #{regIp}
			, now()
			, #{modId}
			, #{modIp}
			, now()
			)
		</foreach>
	</insert>



	<!--
      쿼리명 : EBBEpisdMapper.selectBdgetDtlList
      설  명 : 교육차수관리 - 강사관계를 호출한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.24   김학규       최초생성
 	-->
	<select id="selectBdgetDtlList" parameterType="EBBBdgetDTO" resultType="EBBBdgetDTO">
		select /*EBBEpisdMapper.selectBdgetDtlList */
			edctn_seq
			, episd_ord
			, cd
            , episd_year
            , pmt
		     , etc_nm
            , reg_id
            , reg_ip
            , reg_dtm
            , mod_id
            , mod_ip
            , mod_dtm
		from ed_edctn_bdget_expns_dtl
		where 1=1
		  and edctn_seq = #{edctnSeq}
		  and episd_year = #{episdYear}
		  and episd_ord = #{episdOrd}
	</select>




	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdSrvRstDtl
      설  명 : 교육차수관리 - 만족도 결과 통계 호출
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectEpisdSrvRstDtl" parameterType="EBBEpisdDTO" resultType="EBBSrvRstDTO">
		SELECT /* EBBEpisdMapper.selectEpisdSrvRstDtl */
			EDCTN_SEQ
			 , EPISD_YEAR
			 , EPISD_ORD
			 , SRV_SEQ
			 ,SUM(CNT1) AS T1
			 ,SUM(CNT2) AS T2
			 ,SUM(CNT3) AS T3
			 ,SUM(CNT4) AS T4
			 ,SUM(CNT5) AS T5
			 ,SUM(CNT6) AS T6
			 ,SUM(CNT7) AS T7
			 ,SUM(CNT8) AS T8
			 ,SUM(CNT9) AS T9

			 ,SUM(CNT01) AS A1
			 ,SUM(CNT02) AS A2
			 ,SUM(CNT03) AS A3
			 ,SUM(CNT04) AS A4
			 ,SUM(CNT05) AS A5
			 ,SUM(CNT06) AS A6
			 ,SUM(CNT07) AS A7
		FROM
			(
				SELECT

					EDCTN_SEQ
					 , EPISD_YEAR
					 , EPISD_ORD
					 , A.SRV_SEQ
					 , CASE WHEN DEPT_CD = 'MEM_CD02002' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT1
					 , CASE WHEN DEPT_CD = 'MEM_CD02003' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT2
					 , CASE WHEN DEPT_CD = 'MEM_CD02004' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT3
					 , CASE WHEN DEPT_CD = 'MEM_CD02005' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT4
					 , CASE WHEN DEPT_CD = 'MEM_CD02006' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT5
					 , CASE WHEN DEPT_CD = 'MEM_CD02007' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT6
					 , CASE WHEN DEPT_CD = 'MEM_CD02008' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT7
					 , CASE WHEN DEPT_CD = 'MEM_CD02009' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT8
					 , CASE WHEN DEPT_CD = 'MEM_CD02010' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT9

					 , CASE WHEN PSTN_CD = 'MEM_CD01001' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT01
					 , CASE WHEN PSTN_CD = 'MEM_CD01002' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT02
					 , CASE WHEN PSTN_CD = 'MEM_CD01003' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT03
					 , CASE WHEN PSTN_CD = 'MEM_CD01004' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT04
					 , CASE WHEN PSTN_CD = 'MEM_CD01005' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT05
					 , CASE WHEN PSTN_CD = 'MEM_CD01006' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT06
					 , CASE WHEN PSTN_CD = 'MEM_CD01007' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT07

				FROM ED_EDCTN_EPISD_MST A
						 LEFT JOIN (
					SELECT MEM_SEQ, srv_seq, rfnc_seq, rfnc_cd FROM SV_RSPN_MST
				) B ON A.srv_seq = B.srv_seq AND b.rfnc_seq = A.episd_ord

						 LEFT JOIN
					 (
						 SELECT MEM_SEQ, MEM_CD, DEPT_CD, PSTN_CD FROM co_mem_mst where mem_cd = 'CP'
					 ) C ON B.mem_seq = C.mem_seq
						 LEFT JOIN
					 (
						 SELECT CD
						 FROM CO_CODE_MST
						 WHERE PARNT_SEQ IN
							   (SELECT CD_SEQ
								FROM CO_CODE_MST
								WHERE CD IN ('MEM_CD01', 'MEM_CD02'))
					 ) T2 ON C.DEPT_CD = T2.CD
				WHERE C.MEM_CD = 'CP' AND B.rfnc_cd = 'EDU'
				GROUP BY EDCTN_SEQ, EPISD_YEAR, EPISD_ORD, B.SRV_SEQ, DEPT_CD, PSTN_CD
			) T
		WHERE 1=1
		  and edctn_seq = #{edctnSeq}
		  and episd_year = #{episdYear}
		  and episd_ord = #{episdOrd}

		GROUP BY EDCTN_SEQ, EPISD_YEAR, EPISD_ORD, SRV_SEQ


	</select>


	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdPtcptListCnt
      설  명 : 교육차수관리 - 참여자 목록 카운트
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectEpisdPtcptListCnt" parameterType="EBBEpisdDTO" resultType="java.lang.Integer">
		select /* EBBEpisdMapper.selectEpisdPtcptListCnt */
			count(*)
		from ep_edctn_ptcpt_mst a
				 left join(select mem_seq, id, name, hp_no, email, reg_dtm from co_mem_mst where 1=1 and mem_cd = 'CP') b on a.mem_seq = b.mem_seq
				 left join(select cmpn_nm, ctgry_cd, bsnm_no from cp_cmpn_mst where 1=1) c on c.bsnm_no = a.ptcpt_bsnm_no
		where 1=1
		  and edctn_seq = #{edctnSeq}
		  and episd_year = #{episdYear}
		  and episd_ord = #{episdOrd}
	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdPtcptList
      설  명 : 교육차수관리 - 참여자 목록
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectEpisdPtcptList" parameterType="EBBEpisdDTO" resultType="EBBPtcptDTO">
		select /* EBBEpisdMapper.selectEpisdPtcptList */
			a.ptcpt_seq
			, b.id
			, b.name
			, (select cmpn_nm from cp_cmpn_mst where bsnm_no = a.ptcpt_bsnm_no) as cmpn_nm
			, (select cd_nm from co_code_mst where cd = c.ctgry_cd) as ctgry_nm
			, a.ptcpt_bsnm_no /*사업자등록번호*/
			, b.hp_no
			, b.email
		    , a.stts_cd
		    , (select cd_nm from co_code_mst where cd = a.stts_cd) as stts_cd_nm
			, a.reg_dtm as edu_dtm
			, b.reg_dtm
			, a.cmptn_yn
			, a.exam_score
			, otsd_exam_ptcpt_yn
			, case when d.edctn_stts_cd = 'EDCTN_STTS_CD01' then /*개강일 경우*/
					case when a.stts_cd = 'EDU_STTS_CD01' then /*참여자 상태 : 신청*/
							case when NOW()  <![CDATA[<]]> d.edctn_strt_dtm then '교육대기'
									when d.edctn_strt_dtm <![CDATA[<]]> NOW() AND NOW() <![CDATA[<]]>  d.edctn_end_dtm  then '교육중'
									when d.edctn_end_dtm <![CDATA[<]]> NOW()  then '교육종료'
							end
							when a.stts_cd = 'EDU_STTS_CD02' then '신청취소'
					end

			when d.edctn_stts_cd = 'EDCTN_STTS_CD02' then '교육취소'  /*폐강일 경우*/
		end edu_stat

		, ifnull(ROUND(((SELECT COUNT(atndc_dtm) FROM ep_edctn_atndc_dtl WHERE ptcpt_seq = a.ptcpt_seq AND atndc_dtm IS NOT NULL) / (select COUNT(edctn_dt) FROM ep_edctn_atndc_dtl WHERE ptcpt_seq = a.ptcpt_seq))*100), '0') as  edu_atndc/*출석률*/
		from ep_edctn_ptcpt_mst a
				left join(select mem_seq, id, name, hp_no, email, reg_dtm from co_mem_mst where 1=1 and mem_cd = 'CP') b on a.mem_seq = b.mem_seq
				left join(select cmpn_nm, ctgry_cd, bsnm_no from cp_cmpn_mst where 1=1) c on c.bsnm_no = a.ptcpt_bsnm_no
				left join(SELECT edctn_seq, episd_year, episd_ord, edctn_strt_dtm, edctn_end_dtm, otsd_exam_ptcpt_yn, edctn_stts_cd FROM ed_edctn_episd_mst) d ON d.edctn_seq = a.edctn_seq AND d.episd_year = a.episd_year AND d.episd_ord = a.episd_ord
		where 1=1
		  and a.edctn_seq = #{edctnSeq}
		  and a.episd_year = #{episdYear}
		  and a.episd_ord = #{episdOrd}
		  and a.stts_cd != 'EDU_STTS_CD04'
		order by
			edu_dtm desc

			limit #{firstIndex}, #{recordCountPerPage}

	</select>

	<!--
             쿼리명 : EBBEpisdMapper.updateEpisdPtcpt
             설  명 : 교육차수관리 - 참여자 목록 수정(평가점수, 수료상태 변경)
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<update id="updateEpisdPtcpt" parameterType="EBBEpisdDTO" >
		<foreach collection="ptcptList" item="ptcptList" index="index" separator=";" open="" close=";">
			update ep_edctn_ptcpt_mst set /* EBBEpisdMapper.updateEpisdPtcpt */

				mod_id = #{ptcptList.modId}
				, mod_ip = #{ptcptList.modIp}
				, mod_dtm = now()
				<if test='ptcptList.cmptnChangeYn =="Y" '>
					/*변경됐을때만*/
					, cmptn_yn = #{ptcptList.cmptnYn}
					, cmptn_dtm = now()
				</if>

				/*오프라인평가인경우에만 입력*/
				 <if test='ptcptList.otsdExamPtcptYn =="Y" '>
					, exam_score = #{ptcptList.examScore}
				</if>



			where 1=1
				and edctn_seq = #{ptcptList.edctnSeq}
				and episd_year = #{ptcptList.episdYear}
				and episd_ord = #{ptcptList.episdOrd}
				and ptcpt_seq = #{ptcptList.ptcptSeq}
		</foreach>
	</update>


	<!--
      쿼리명 : EBBEpisdMapper.selectFxnumChk
      설  명 : 교육차수관리 - 참여자 정원체크
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectFxnumChk" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		select /* EBBEpisdMapper.selectFxnumChk */
				aa.edctn_seq
				, aa.episd_year
				, aa.episd_ord
				, aa.fxnum_impsb_yn
				, aa.fxnum_cnt
				, cnt
				, case when aa.fxnum_impsb_yn = 'N' then 'S'
						when aa.fxnum_impsb_yn = 'Y' then
						case when aa.cnt <![CDATA[<]]> aa.fxnum_cnt then 'S'
								else 'F'
						end
				end fxnum_stta
			FROM (SELECT
						edctn_seq
						, episd_year
						, episd_ord
						, fxnum_impsb_yn
						, fxnum_cnt
						, (SELECT COUNT(*) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord  ) AS cnt
			from ed_edctn_episd_mst a
			WHERE 1=1
				and edctn_seq = #{edctnSeq}
				and episd_year = #{episdYear}
				and episd_ord = #{episdOrd}
			) aa
	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectPtcptDtl
      설  명 : 교육차수 - 신청자 등록 전 확인
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectPtcptDtl" parameterType="EBBPtcptDTO" resultType="EBBPtcptDTO">
			select
			ptcpt_seq
			, edctn_seq
			, episd_year
			, episd_ord
			, mem_seq
			, gpc_id
			from ep_edctn_ptcpt_mst
			  WHERE 1=1
				and edctn_seq = #{edctnSeq}
				and episd_year = #{episdYear}
				and episd_ord = #{episdOrd}
				and mem_seq = #{memSeq}
	</select>

	<!--
             쿼리명 : EBBEpisdMapper.insertPtcptDtl
             설  명 : 교육차수 - 신청자 등록
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertPtcptDtl" parameterType="EBBPtcptDTO">
		INSERT INTO ep_edctn_ptcpt_mst (
			ptcpt_seq
			, edctn_seq
			, episd_year
			, episd_ord
			, mem_seq
			, ptcpt_bsnm_no
			, stts_cd
			, gpc_id
			, cmptn_yn
			, cmptn_dtm
			, exam_score
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
			, episd_seq
		) VALUES(
				#{ptcptSeq}
				, #{edctnSeq}
				, #{episdYear}
				, #{episdOrd}
				, #{memSeq}
				, #{ptcptBsnmNo}
				, 'EDU_STTS_CD01'
				, #{gpcId}
				, 'N'
				, null
				, null
				, #{regId}
				, #{regIp}
				, now()
				, #{modId}
				, #{modIp}
				, now()
				, #{episdSeq}
			)

	</insert>

	<!--
             쿼리명 : EBBEpisdMapper.insertAtndcList
             설  명 : 교육차수 - 신청자 출석 목록 등록
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.12.05   김학규       최초생성
        -->
	<insert id="insertAtndcList" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertAtndcList*/ ep_edctn_atndc_dtl (
			ptcpt_seq
			, edctn_dt
			, atndc_dtm
			, lvgrm_dtm
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES
		<foreach collection="ptcptList" item="ptcptList" index="index" separator=" , " open="" close=";">
			(
			#{ptcptList.ptcptSeq}
			, #{ptcptList.edctnDt}
			, #{ptcptList.atndcDtm}
			, #{ptcptList.lvgrmDtm}
			, #{ptcptList.regId}
			, #{ptcptList.regIp}
			, now()
			, #{ptcptList.modId}
			, #{ptcptList.modIp}
			, now()
			)
		</foreach>
	</insert>







</mapper>


