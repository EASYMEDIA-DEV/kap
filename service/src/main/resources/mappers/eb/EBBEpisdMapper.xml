<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kap.service.dao.eb.EBBEpisdMapper">
	<!--
		쿼리명 : EBACouseMapper.selectEpisdList
		설  명 : 교육차수 목록을 조회한다.
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.15    김학규       최초생성
    -->
	<select id="selectEpisdList" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		SELECT /*EBBEpisdMapper.selectEpisdList*/
				edctn_seq
				, episd_seq
				, episd_year
				, episd_ord
				, parnt_seq
				, (select cd_nm from co_code_mst WHERE cd_seq = aa.parnt_seq) AS prnt_cd_nm
				, ctgry_cd
				, ctgry_cd_nm
		     	, cbsn_cd
				, (select cd_nm from co_code_mst WHERE cd = aa.cbsn_cd) as cbsn_cd_nm
				, nm
				, stduy_mthd_cd
				, stduy_mthd_cd_nm
				, stduy_dd_cd
				, stduy_dd_cd_nm
				, stduy_time_cd
				, stduy_time_cd_nm
				, episd_year
				, episd_ord
				, DATEDIFF(accs_end_dtm, NOW()) AS accs_order_day
				, accs_strt_dtm
				, accs_end_dtm
				, case
					when NOW() <![CDATA[<]]> accs_strt_dtm then '접수대기'
					when NOW() <![CDATA[>]]> accs_strt_dtm AND NOW() <![CDATA[<]]>  accs_end_dtm then '접수중'
					when NOW() <![CDATA[>]]> accs_end_dtm OR (fxnum_impsb_yn = 'N' AND accs_cnt <![CDATA[>=]]> fxnum_cnt) then '마감'
					END  AS accs_status_nm
				, case
				when NOW()  <![CDATA[<]]>  accs_strt_dtm then '2'
				when NOW()  <![CDATA[>]]>  accs_strt_dtm AND NOW()  <![CDATA[<]]>   accs_end_dtm then '1'
				when NOW()  <![CDATA[>]]>  accs_end_dtm OR (fxnum_impsb_yn = 'N' AND accs_cnt  <![CDATA[>=]]>  fxnum_cnt) then '3'
				END  AS accs_status_order
				, edctn_strt_dtm
						, edctn_end_dtm
						, case when edctn_stts_cd = 'EDCTN_STTS_CD01' then /*개강일 경우*/
								case when NOW() <![CDATA[<]]> edctn_strt_dtm then '교육대기'
										when NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm then '교육중'
										when NOW() <![CDATA[>]]> edctn_end_dtm then '교육완료'
								end
								when edctn_stts_cd = 'EDCTN_STTS_CD02' then '교육취소'  /*폐강일 경우*/
				END  AS edctn_status_nm
				, (SELECT NAME FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS isttr_name
				, (SELECT GROUP_CONCAT(name SEPARATOR ', ') from cp_isttr_mst WHERE isttr_seq in (SELECT isttr_seq FROM ed_edctn_isttr_rel WHERE edctn_seq = aa.edctn_seq AND episd_ord = aa.episd_ord AND episd_year = aa.episd_year )) AS isttr_group_name
				, (SELECT ffltn_nm FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS ffltn_nm
				, case when isttr_cnt <![CDATA[<=]]>1 then ''
					when isttr_cnt <![CDATA[>]]>  1 then isttr_cnt-1
					END isttr_out_cnt
				, fxnum_cnt
				, fxnum_impsb_yn
				, accs_cnt
				, rcrmt_mthd_cd
				, rcrmt_mthd_cd_nm
				, pic_nm
				, pic_email
				, pic_tel_no
		     	, edctn_ntctn_file_seq
				, place_seq
				, place_nm
				, bsc_addr
				, dtl_addr
				, zipcode
				, rprsnt_tel_no
		     	, bdget_expns_yn
		     	, case bdget_expns_yn
		     	    when 'Y' then '마감'
					when 'N' then '미마감'
					when 'C' then '교육취소'
				end bdget_expns_nm
				, reg_id
				, reg_name
				, reg_dtm
				, mod_id
				, mod_name
		     	, mod_dtm
				, exps_yn
				, edctn_cmpltn_yn
			FROM (SELECT
				b.edctn_seq
				, a.episd_seq
				, b.ctgry_cd
				, a.cbsn_cd
				, (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) as ctgry_cd_nm
				, (select parnt_seq from co_code_mst WHERE cd = b.ctgry_cd) as parnt_seq
				, b.nm
				, b.stduy_mthd_cd
				, (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm
				, b.stduy_dd_cd
				, (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) as stduy_dd_cd_nm
				, b.stduy_time_cd
				, (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm
				, a.episd_year
				, a.episd_ord
				, a.accs_strt_dtm
				, a.accs_end_dtm
				, a.edctn_strt_dtm
				, a.edctn_end_dtm
			   	, a.edctn_stts_cd
				, (SELECT min(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS min_isttr_seq
				, (SELECT COUNT(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS isttr_cnt
				, a.fxnum_cnt
				, a.fxnum_impsb_yn
				, (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord AND stts_cd = 'EDU_STTS_CD01') AS accs_cnt
				, a.rcrmt_mthd_cd
				, (select cd_nm from co_code_mst where cd=a.rcrmt_mthd_cd) as rcrmt_mthd_cd_nm
				, a.pic_nm
				, a.pic_email
				, a.pic_tel_no
			   	, a.edctn_ntctn_file_seq
				, a.place_seq
				/*, (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as place_nm
				, (SELECT bsc_addr FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as bsc_addr
				, (SELECT dtl_addr FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as dtl_addr
				, (SELECT dtl_addr FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as zipcode
				, (SELECT dtl_addr FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as rprsnt_tel_no*/
				, c.nm as place_nm
			    , c.bsc_addr
			    , c.dtl_addr
			    , c.zipcode
			    , c.rprsnt_tel_no
			   	, a.bdget_expns_yn
				, a.reg_id
				, (select name from co_adm_mst where id = a.reg_id) as reg_name
				, a.reg_dtm
				, a.mod_id
				, (select name from co_adm_mst where id = a.reg_id) as mod_name
				, a.mod_dtm
			    , a.exps_yn
				, a.edctn_cmpltn_yn
				FROM ed_edctn_episd_mst a
				LEFT JOIN ed_edctn_prcs_mst b ON a.edctn_seq = b.edctn_seq
				LEFT JOIN (SELECT place_seq, nm, bsc_addr, dtl_addr, zipcode, rprsnt_tel_no FROM ed_edctn_place_mst ) c ON a.place_seq = c.place_seq
			<include refid="selectLecturerEpisdListSql" />
		) AA

		<include refid="selectEpisdListwhereSql" />

		order by
		reg_dtm desc

		<if test="excelYn != 'Y'.toString() ">
			limit #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<!--
		쿼리명 : EBACouseMapper.selectCouseListCnt
		설  명 : 교육차수 목록을 조회한다. (카운트)
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.15    김학규       최초생성
    -->
	<select id="selectEpisdListCnt" parameterType="EBBEpisdDTO" resultType="java.lang.Integer">
		SELECT /*EBACouseMapper.selectEpisdListCnt*/
			count(*)
		FROM (SELECT
		b.edctn_seq
		, a.episd_seq
		, b.ctgry_cd
		, a.cbsn_cd
		, (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) as ctgry_cd_nm
		, (select parnt_seq from co_code_mst WHERE cd = b.ctgry_cd) as parnt_seq
		, b.nm
		, b.stduy_mthd_cd
		, (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm
		, b.stduy_dd_cd
		, (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) as stduy_dd_cd_nm
		, b.stduy_time_cd
		, (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm
		, a.episd_year
		, a.episd_ord
		, a.accs_strt_dtm
		, a.accs_end_dtm
		, a.edctn_strt_dtm
		, a.edctn_end_dtm
		, a.edctn_stts_cd
		, (SELECT min(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS min_isttr_seq
		, (SELECT COUNT(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS isttr_cnt
		, a.fxnum_cnt
		, a.fxnum_impsb_yn
		, (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord AND stts_cd = 'EDU_STTS_CD01') AS accs_cnt
		, a.rcrmt_mthd_cd
		, (select cd_nm from co_code_mst where cd=a.rcrmt_mthd_cd) as rcrmt_mthd_cd_nm
		, a.pic_nm
		, a.pic_email
		, a.pic_tel_no
		, a.place_seq
		, (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as place_nm
		, a.reg_id
		, (select name from co_adm_mst where id = a.reg_id) as reg_name
		, a.reg_dtm
		, a.mod_id
		, (select name from co_adm_mst where id = a.reg_id) as mod_name
		, a.mod_dtm
		, a.exps_yn
		, a.edctn_cmpltn_yn
		FROM ed_edctn_episd_mst a
		LEFT JOIN ed_edctn_prcs_mst b ON a.edctn_seq = b.edctn_seq
		<include refid="selectLecturerEpisdListSql" />
		) AA
		<include refid="selectEpisdListwhereSql" />
	</select>

	<!--
		쿼리명 : selectEpisdListwhereSql
		설  명 : 교육차수 where Sql
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.15    김학규       최초생성
    -->
	<sql id="selectEpisdListwhereSql">
		<where>

			<if test="siteGubun == 'front'.toString() ">
				<!--사용자는 교육 시작일 이전만 출력-->
				AND NOW()  <![CDATA[<]]>  edctn_strt_dtm
			</if>

			<!-- -->
			<if test="edctnSeq != null and edctnSeq != ''">
				AND edctn_seq = #{edctnSeq}
			</if>
			<if test="edctnSeq == null and edctnSeq == ''">
				AND edctn_seq = null
			</if>


			<!--등록일/수정기간-->
			<if test="strtDt != null and strtDt != ''">
				<choose>
					<when test="srchDate == 1">
						AND REG_DTM <![CDATA[>=]]> DATE_FORMAT(#{strtDt}, '%Y-%m-%d 00:00:00')
						AND REG_DTM <![CDATA[<=]]> DATE_FORMAT(#{endDt}, '%Y-%m-%d 23:59:59')
					</when>
					<when test="srchDate == 2">
						AND MOD_DTM <![CDATA[>=]]> DATE_FORMAT(#{strtDt}, '%Y-%m-%d 00:00:00')
						AND MOD_DTM <![CDATA[<=]]> DATE_FORMAT(#{endDt}, '%Y-%m-%d 23:59:59')
					</when>
					<when test="srchDate == 3">
						AND ACCS_STRT_DTM <![CDATA[ > ]]> STR_TO_DATE(#{strtDt}, '%Y-%m-%d')

					</when>
					<when test="srchDate == 4">
						AND EDCTN_STRT_DTM <![CDATA[ > ]]> STR_TO_DATE(#{strtDt}, '%Y-%m-%d')
					</when>
				</choose>
			</if>

			<!--과정분류-->
			<if test="ctgryCdList != null and ctgryCdList.size() > 0">
				and (
				<foreach collection="ctgryCdList" item="ctgryCdList" index="index" open="" close="" separator=" or ">
					ctgry_cd = #{ctgryCdList}
				</foreach>
				)
			</if>
			<!--학습방식 -->
			<if test="stduyMthdCdList != null and stduyMthdCdList.size() > 0">
				and (
				<foreach collection="stduyMthdCdList" item="stduyMthdCdList" index="index" open="" close="" separator=" or ">
					stduy_mthd_cd = #{stduyMthdCdList}
				</foreach>
				)
			</if>

			<!-- 학습일 -->
			<if test="stduyDdCd != null and stduyDdCd != ''">
				AND stduy_dd_cd = #{stduyDdCd}
			</if>
			<!-- 학습시간 -->
			<if test="stduyTimeCd != null and stduyTimeCd != ''">
				AND stduy_time_cd = #{stduyTimeCd}
			</if>

			<!-- 모집방식 -->
			<if test="rcrmtMthdCdList != null and rcrmtMthdCdList.size() > 0">
				and (
				<foreach collection="rcrmtMthdCdList" item="rcrmtMthdCdList" index="index" open="" close="" separator=" or ">
					rcrmt_mthd_cd = #{rcrmtMthdCdList}
				</foreach>
				)
			</if>

			<!--접수상태-->
			<if test="accsStatusList != null and accsStatusList.size() > 0">
				and (
				<foreach collection="accsStatusList" item="accsStatusList" index="index" open="" close="" separator=" or ">
					<choose>
						<when test="accsStatusList != null">
							<if test="accsStatusList == 1"><!--접수대기-->
								NOW() <![CDATA[<]]> accs_strt_dtm
							</if>
							<if test="accsStatusList == 2"><!--접수중-->
								NOW() <![CDATA[>]]> accs_strt_dtm AND NOW() <![CDATA[<]]>  accs_end_dtm
							</if>
							<if test="accsStatusList == 3"><!--마감-->
								(NOW() <![CDATA[>]]> accs_end_dtm OR (fxnum_impsb_yn = 'N' AND accs_cnt <![CDATA[>=]]> fxnum_cnt))
							</if>
						</when>

					</choose>
				</foreach>
				)
			</if>

			<!--접수상태-->
			<if test="edctnStatusList != null and edctnStatusList.size() > 0">
				and (
				<foreach collection="edctnStatusList" item="edctnStatusList" index="index" open="" close="" separator=" or ">
					<choose>
						<when test="edctnStatusList != null">
							<if test="edctnStatusList == 1"><!--접수대기-->
								NOW() <![CDATA[<]]> edctn_strt_dtm
							</if>
							<if test="edctnStatusList == 2"><!--접수중-->
								NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm
							</if>
							<if test="edctnStatusList == 3"><!--마감-->
								(NOW() <![CDATA[>]]> edctn_end_dtm)
							</if>
						</when>
					</choose>
				</foreach>
				)
			</if>

			<if test='edctnSeq !=null and edctnSeq != "" '>
			AND 	edctn_seq = #{edctnSeq}
			</if>

			<!--차수변경일때만 사용-->
			<if test='changeListYn == "Y" '>
				and edctn_stts_cd = 'EDCTN_STTS_CD01'
				and NOW() <![CDATA[<]]>  edctn_strt_dtm
				and edctn_seq =#{edctnSeq}
				and episd_seq != #{episdSeq}
			</if>

			<!--노출여부-->
			<if test="expsYnList != null and expsYnList.size() > 0">
				AND (
				<foreach collection="expsYnList" item="expsYn" index="index" open="" close="" separator=" OR ">
					EXPS_YN = #{expsYn}
				</foreach>
				)
			</if>

			<if test="q != null and q != ''.toString() ">
				<choose>
					<when test="f == 1"><!-- 과정명 -->
						and nm like concat('%', #{q}, '%')
					</when>
					<when test="f == 2"><!--최초수정자-->
						AND (
						INSTR(#{q}, aa.REG_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.REG_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0)
						)
					</when>
					<when test="f == 3"><!--최종수정자-->
						AND (
						INSTR(#{q}, aa.MOD_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.MOD_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0)
						)
					</when>
					<otherwise><!--전체수정자-->
						AND (
						INSTR(#{q}, nm) <![CDATA[>]]> 0 OR
						INSTR(#{q}, REG_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.REG_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0) OR
						INSTR(#{q}, MOD_ID) <![CDATA[>]]> 0 OR
						EXISTS(SELECT 'x' FROM CO_ADM_MST WHERE ID = aa.MOD_ID AND INSTR(#{q}, NAME) <![CDATA[>]]> 0)
						)
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>

	<!--
		쿼리명 : selectLecturerEpisdListSql
		설  명 : 강사 관리 상세에서 교육 사업 현황 조회 조인 Sql
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.23    구은희       최초생성
    -->
	<sql id="selectLecturerEpisdListSql">
		<if test="isttrSeq != null and isttrSeq != ''">
			INNER JOIN
			(
			SELECT
			edctn_seq
			, episd_year
			, episd_ord
			, isttr_seq
			FROM ed_edctn_isttr_rel
			) C
			ON 1 = 1
			AND A.edctn_seq = C.edctn_seq
			AND A.episd_year = C.episd_year
			AND A.episd_ord = C.episd_ord
			AND C.isttr_seq = #{isttrSeq}
		</if>
	</sql>

	<!--
      쿼리명 : EBBEpisdMapper.selectLctrDtlList
      설  명 : 교육강의상세목록를 출력한다
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.02   김학규       최초생성
 	-->
	<select id="selectLctrDtlList" parameterType="EBBLctrDTO" resultType="EBBLctrDTO">
		select /* EBBEpisdMapper.selectLctrDtlList */
			edctn_seq
			, episd_ord
			, lctr_seq
			, episd_year
			, nm
			, url
			, time
			, thnl_file_seq
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		from ed_edctn_lctr_dtl where 1=1
		and edctn_seq = #{edctnSeq}
		and episd_ord = #{episdOrd}
		and episd_year = #{episdYear}
	</select>


	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdDtl
      설  명 : 교육차수 상세를 조회한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.02   김학규       최초생성
 	-->
	<select id="selectEpisdDtl" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		SELECT /*EBBEpisdMapper.selectEpisdDtl*/
			edctn_seq
			 , episd_year
			 , episd_ord
			 , episd_seq
			 , parnt_seq
			 , (select cd_nm from co_code_mst WHERE cd_seq = aa.parnt_seq) AS prnt_cd_nm
		     , jdgmt_yn
			 , ctgry_cd
			 , ctgry_cd_nm
		     , cbsn_cd
			 , (select cd_nm from co_code_mst WHERE cd = aa.cbsn_cd) AS cbsn_cd_nm
			 , nm
			 , stduy_mthd_cd
			 , stduy_mthd_cd_nm
			 , stduy_dd_cd
			 , stduy_dd_cd_nm
			 , stduy_time_cd
			 , stduy_time_cd_nm
			 , episd_year
			 , episd_ord
			 , accs_strt_dtm
			 , accs_end_dtm
			 , case
				   when NOW() <![CDATA[<]]> accs_strt_dtm then '접수대기'
				   when NOW() <![CDATA[>]]> accs_strt_dtm AND NOW() <![CDATA[<]]>  accs_end_dtm then '접수중'
				   when NOW() <![CDATA[>]]> accs_end_dtm OR (fxnum_impsb_yn = 'N' AND accs_cnt <![CDATA[>=]]> fxnum_cnt) then '마감'
			END  AS accs_status_nm
			 , edctn_strt_dtm
			 , edctn_end_dtm
			 , edctn_ntctn_file_seq
			 , case
				   when NOW() <![CDATA[<]]> edctn_strt_dtm then '교육대기'
				   when NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm then '교육중'
				   when NOW() <![CDATA[>]]> edctn_end_dtm then '교육완료'
			END  AS edctn_status_nm
			 , (SELECT NAME FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS isttr_name
			 , (SELECT ffltn_nm FROM cp_isttr_mst WHERE isttr_seq = aa.min_isttr_seq) AS ffltn_nm
			 , case when isttr_cnt <![CDATA[<=]]>1 then ''
					when isttr_cnt <![CDATA[>]]>  1 then isttr_cnt-1
			END isttr_out_cnt
			 , fxnum_cnt
		     , fxnum_impsb_yn
			 , accs_cnt
			 , rcrmt_mthd_cd
			 , rcrmt_mthd_cd_nm
			 , pic_nm
			 , pic_email
			 , pic_tel_no
			 , place_seq
			 , srv_seq
		     , srv_strt_dtm
		     , srv_end_dtm
		     , srv_nm
		     , (SELECT CD_NM FROM CO_CODE_MST WHERE CD = AA.type_cd) AS TYPE_NM
		     , srv_mem_cnt
		     , edctn_mem_cnt
			 , exam_seq
		     , exam_nm
			 , exam_strt_dtm
			 , exam_end_dtm
		     , otsd_exam_ptcpt_yn
		     , cprtn_instt_seq
		     , cprtn_instt_nm
			 , place_nm
			 , reg_id
			 , reg_name
			 , reg_dtm
			 , mod_id
			 , mod_name
		     , bdget_expns_yn
		     , cmptn_auto_yn
		     , expns_cprtn_instt_nm
		     , expns_cprtn_instt_seq
		     , expns_pmt
			 , exps_yn
			 , edctn_cmpltn_yn
		FROM (SELECT
				  b.edctn_seq
		           , a.episd_seq
				   , b.ctgry_cd
		           , a.cbsn_cd
				   , (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) as ctgry_cd_nm
				   , (select parnt_seq from co_code_mst WHERE cd = b.ctgry_cd) as parnt_seq
		           , b.jdgmt_yn
				   , b.nm
				   , b.stduy_mthd_cd
				   , (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm
				   , b.stduy_dd_cd
				   , (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) as stduy_dd_cd_nm
				   , b.stduy_time_cd
				   , (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm
				   , a.episd_year
				   , a.episd_ord
				   , a.accs_strt_dtm
				   , a.accs_end_dtm
				   , a.edctn_strt_dtm
				   , a.edctn_end_dtm
		           , a.edctn_ntctn_file_seq
				   , (SELECT min(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS min_isttr_seq
				   , (SELECT COUNT(isttr_seq) FROM ed_edctn_isttr_rel c WHERE a.edctn_seq = c.edctn_seq AND a.episd_year = c.episd_year AND a.episd_ord = c.episd_ord) AS isttr_cnt
				   , a.fxnum_cnt
				   , a.fxnum_impsb_yn
				   , (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord) AS accs_cnt
				   , a.rcrmt_mthd_cd
				   , (select cd_nm from co_code_mst where cd=a.rcrmt_mthd_cd) as rcrmt_mthd_cd_nm
				   , a.pic_nm
				   , a.pic_email
				   , a.pic_tel_no
				   , a.place_seq
				   , a.srv_seq
		           , (select type_cd from sv_mst where srv_seq = a.srv_seq) as type_cd
				   , a.srv_strt_dtm
				   , a.srv_end_dtm
		           , (select titl from sv_mst where srv_seq = a.srv_seq) as srv_nm
				   , (select COUNT(mem_seq) from sv_rspn_mst WHERE srv_seq = a.srv_seq) AS srv_mem_cnt /*설문 참여자수*/
				   , (SELECT COUNT(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord) AS edctn_mem_cnt
				   , a.exam_seq
		           , a.exam_strt_dtm
		           , a.exam_end_dtm
		           , a.otsd_exam_ptcpt_yn
				   , (SELECT titl FROM ex_exam_mst WHERE exam_seq = A.exam_seq) as exam_nm
		           , cprtn_instt_seq
				   , (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.cprtn_instt_seq) as cprtn_instt_nm
				   , (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.place_seq) as place_nm
				   , a.reg_id
				   , (select name from co_adm_mst where id = a.reg_id) as reg_name
				   , a.reg_dtm
				   , a.mod_id
				   , (select name from co_adm_mst where id = a.reg_id) as mod_name
				   , a.mod_dtm
		           , a.bdget_expns_yn
		           , a.cmptn_auto_yn
				   , a.expns_cprtn_instt_seq
				   , (SELECT NM FROM ed_edctn_place_mst WHERE PLACE_SEQ = A.expns_cprtn_instt_seq) as expns_cprtn_instt_nm
		           , a.expns_pmt
				   , a.exps_yn
				   , a.edctn_cmpltn_yn
			  FROM ed_edctn_episd_mst a
					   LEFT JOIN ed_edctn_prcs_mst b ON a.edctn_seq = b.edctn_seq) AA
		where
			edctn_seq = #{detailsKey}
			and episd_year = #{episdYear}
		    and episd_ord = #{episdOrd}
	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdChk
      설  명 : 교육과정 상세를 조회한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.02   김학규       최초생성
 	-->
	<select id="selectEpisdChk" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		select * /* EBBEpisdMapper.selectEpisdChk */
		from ed_edctn_episd_mst
		where
		edctn_seq = #{edctnSeq}
		and episd_year = #{episdYear}
		and episd_ord = #{episdOrd}
	</select>

	<!--
      쿼리명 : EBBEpisdMapper.updatePtcptStatus
      설  명 : 교육차수 참여자 교육취소처리 - 전체
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.12.11   김학규       최초생성
 	-->
	<update id="updatePtcptStatus" parameterType="EBBEpisdDTO" >

		UPDATE ep_edctn_ptcpt_mst SET /* EBBEpisdMapper.updatePtcptStatus */
			stts_cd = 'EDU_STTS_CD06'
			, mod_id = #{modId}
			, mod_ip = #{modIp}
			, mod_dtm = now()
		WHERE 1=1
		  and edctn_seq = #{edctnSeq}
		  and episd_year = #{episdYear}
		  and episd_ord = #{episdOrd}
	</update>
	<!--
	쿼리명 : EBBEpisdMapper.updatePtcptStatus
	설  명 : 교육차수 참여자 차수변경을 통한 교육취소처리 - 개인
	수정일     수정자       수정내용
	==========   ======    ==============
	2023.12.11   김학규       최초생성
	-->
	<update id="updatePtcptStatusInfo" parameterType="EBBPtcptDTO" >

		UPDATE ep_edctn_ptcpt_mst SET /* EBBEpisdMapper.updatePtcptStatus */
			stts_cd = 'EDU_STTS_CD06'
			, mod_id = #{modId}
			, mod_ip = #{modIp}
			, mod_dtm = now()
		WHERE 1=1
			and edctn_seq = #{edctnSeq}
			and episd_year = #{episdYear}
			and episd_ord = #{episdOrd}
			and ptcpt_seq = #{ptcptSeq}
	</update>

	<!--
      쿼리명 : EBBEpisdMapper.updateEpisdStatus
      설  명 : 교육차수 차수 종강(폐강처리)
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.12.11   김학규       최초생성
 	-->
	<update id="updateEpisdStatus" parameterType="EBBEpisdDTO" >

		UPDATE ed_edctn_episd_mst SET /* EBBEpisdMapper.updateEpisdStatus */
			edctn_stts_cd = 'EDCTN_STTS_CD02'
			, bdget_expns_yn = 'C'
			, mod_id = #{modId}
			, mod_ip = #{modIp}
			, mod_dtm = now()
			WHERE 1=1
				and edctn_seq = #{edctnSeq}
				and episd_year = #{episdYear}
				and episd_ord = #{episdOrd}
	</update>

	<!--
         쿼리명 : EBBEpisdMapper.insertEpisd
         설  명 : 교육차수를 등록한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.02   김학규       최초생성
    -->
	<insert id="insertEpisd" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEpisd*/ ed_edctn_episd_mst (
			edctn_seq
			, episd_year
			, episd_ord
			, episd_seq
			, cbsn_cd
			, accs_strt_dtm
			, accs_end_dtm
			, edctn_strt_dtm
			, edctn_end_dtm
			, fxnum_cnt
			, fxnum_impsb_yn
			, rcrmt_mthd_cd
			, pic_nm
			, pic_email
			, pic_tel_no
			, edctn_ntctn_file_seq
			, place_seq
			, srv_seq
			, srv_strt_dtm
			, srv_end_dtm
			, exam_seq
		  	, exam_strt_dtm
		  	, exam_end_dtm
			, otsd_exam_ptcpt_yn
			, cprtn_instt_seq
			, cmptn_auto_yn
			, edctn_stts_cd
			, expns_cprtn_instt_seq
			, expns_pmt
			, bdget_expns_yn
			, exps_yn
			, edctn_cmpltn_yn
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
			) VALUES(
				#{edctnSeq}
				, #{episdYear}
				, #{episdOrd}
				, #{episdSeq}
				, #{cbsnCd}
				, #{accsStrtDtm}
				, #{accsEndDtm}
				, #{edctnStrtDtm}
				, #{edctnEndDtm}
				, #{fxnumCnt}
				, #{fxnumImpsbYn}
				, #{rcrmtMthdCd}
				, #{picNm}
				, #{picEmail}
				, #{picTelNo}
				, #{edctnNtctnFileSeq}
				, #{placeSeq}
				, #{srvSeq}
				, #{srvStrtDtm}
				, #{srvEndDtm}
				, #{examSeq}
				,#{ examStrtDtm}
				, #{examEndDtm}
				, #{otsdExamPtcptYn}
				, #{cprtnInsttSeq}
				, #{cmptnAutoYn}
				, #{edctnSttsCd}
				, #{expnsCprtnInsttSeq}
				, #{expnsPmt}
				, #{bdgetExpnsYn}
				, #{expsYn}
				, #{edctnCmpltnYn}
				, #{regId}
				, #{regIp}
				, now()
				, #{modId}
				, #{modIp}
				, now()
			)
	</insert>

	<!--
         쿼리명 : EBBEpisdMapper.insertEpisd
         설  명 : 교육 차수별 만족도 결과 상세
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.12.19   김학규       최초생성
    -->
	<insert id="insertEpisdSrvRsltDtl" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEpisdSrvRsltDtl*/ ed_edctn_srv_rslt_dtl (
			rslt_seq
			, edctn_seq
			, episd_year
			, episd_ord
			, episd_seq
			, vrll_avrg
			, ttl_co_score
			, edctn_envrnmt_score
			, edctn_spprt_score
			, edctn_cntn_score
			, isttr_score
			, ttl_ptcpt_cnt
		  	, reg_id
		  	, reg_ip
		  	, reg_dtm
		  	, mod_id
		  	, mod_ip
		  	, mod_dtm
		) VALUES(
				#{rsltSeq}
				, #{edctnSeq}
				, #{episdYear}
				, #{episdOrd}
				, #{episdSeq}
				, 0
				, 0
				, 0
				, 0
				, 0
				, 0
				, 0
				, #{regId}
				, #{regIp}
				, now()
				, #{modId}
				, #{modIp}
				, now()
				)
	</insert>


	<!--
          쿼리명 : EBBEpisdMapper.selectIsttrList
          설  명 : 교육차수관리 - 삭제 전 참여자 체크, 참여자 상태와 무관하게 있는지만 체크
           수정일     수정자       수정내용
         ==========   ======    ==============
         2023.12.14   김학규       최초생성
         -->
	<select id="selectEpisdDeletePrevChk" parameterType="EBBEpisdDTO" resultType="java.lang.Integer">
		SELECT /*EBBEpisdMapper.selectEpisdDeletePrevChk*/
			SUM((select COUNT(ptcpt_seq) from ep_edctn_ptcpt_mst WHERE episd_seq = a.episd_seq)) as ptcpt_cnt
		from ed_edctn_episd_mst a
		where episd_seq IN
		<foreach collection="episdSeqList" item="episdSeqList" index="index" separator=", " open="(" close=")">
			#{episdSeqList}
		</foreach>
	</select>





	<!--
      쿼리명 : EBBEpisdMapper.selectIsttrList
      설  명 : 교육차수관리 - 강사관계를 호출한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.24   김학규       최초생성
 	-->
	<select id="selectIsttrList" parameterType="EBBEpisdDTO" resultType="EBBIsttrDTO">
		select /*EBBEpisdMapper.selectIsttrList*/
			a.edctn_seq
			 , a.episd_ord
			 , a.isttr_seq
			 , a.episd_year
		     , b.name
			 , b.ffltn_nm
			 , b.pstn_nm
			 , b.dept_nm
		     , b.spcl_cntn
			 , a.reg_id
			 , a.reg_ip
			 , a.reg_dtm
			 , a.mod_id
			 , a.mod_ip
			 , a.mod_dtm
		from ed_edctn_isttr_rel a, cp_isttr_mst b
		where 1=1
		and a.isttr_seq = b.isttr_seq
		and edctn_seq = #{edctnSeq}
		and episd_year = #{episdYear}
		and episd_ord = #{episdOrd}
	</select>


	<!--
         쿼리명 : EBBEpisdMapper.deleteIsttrRel
         설  명 : 교육차수 - 교육강세 관계를 삭제한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.23   김학규       최초생성
    -->
	<delete id="deleteIsttrRel" parameterType="EBBEpisdDTO">
		delete from ed_edctn_isttr_rel where 1=1 /* EBBEpisdMapper.deleteIsttrRel */
										and edctn_seq = #{edctnSeq}
										and episd_ord = #{episdOrd}
										and episd_year = #{episdYear}
	</delete>

	<!--
             쿼리명 : EBBEpisdMapper.insertIsttrRel
             설  명 : 교육차수 - 교육강사관계를 등록한다
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertIsttrRel" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEpisd*/ ed_edctn_isttr_rel (
			edctn_seq
			, episd_ord
			, isttr_seq
			, episd_year
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES
		<foreach collection="isttrSeqList" item="isttrSeqList" index="index" separator=" , " open="" close=";">
		      (
			#{isttrSeqList.edctnSeq}
			, #{isttrSeqList.episdOrd}
			, #{isttrSeqList.isttrSeq}
			, #{isttrSeqList.episdYear}
			, #{regId}
			, #{regIp}
			, now()
			, #{modId}
			, #{modIp}
			, now()
		)
		</foreach>
	</insert>

	<!--
             쿼리명 : EBBEpisdMapper.insertLctrDtl
             설  명 : 교육차수 - 교육강의 상세를 등록한다
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertLctrDtl" parameterType="EBBLctrDTO">
		insert into /*EBBEpisdMapper.insertLctrDtl*/ ed_edctn_lctr_dtl (
			edctn_seq
			, episd_ord
			, lctr_seq
			, episd_year
			, nm
			, url
			, time
			, thnl_file_seq
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES(
			#{edctnSeq}
			, #{episdOrd}
			, #{lctrSeq}
			, #{episdYear}
			, #{nm}
			, #{url}
			, #{time}
			, #{thnlFileSeq}
			, #{regId}
			, #{regIp}
			, now()
			, #{modId}
			, #{modIp}
			, now()
		)
	</insert>

	<!--
         쿼리명 : EBBEpisdMapper.deleteLctrDtl
         설  명 : 교육차수 - 교육강의 상세를 삭제한다
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.23   김학규       최초생성
    -->
	<delete id="deleteLctrDtl" parameterType="EBBEpisdDTO">
		delete from ed_edctn_lctr_dtl where 1=1
		and edctn_seq = #{edctnSeq}
		and episd_ord = #{episdOrd}
		and episd_year = #{episdYear}
	</delete>

	<!--
         쿼리명 : EBBEpisdMapper.updateEpisd
         설  명 : 교육차수를 수정한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.02   김학규       최초생성
    -->
	<update id="updateEpisd" parameterType="EBBEpisdDTO" >

		UPDATE ed_edctn_episd_mst SET /* EBBEpisdMapper.updateEpisd */
			episd_year = #{episdYear}
			, episd_ord = #{episdOrd}
			, cbsn_cd = #{cbsnCd}
			, accs_strt_dtm = #{accsStrtDtm}
			, accs_end_dtm = #{accsEndDtm}
			, edctn_strt_dtm = #{edctnStrtDtm}
			, edctn_end_dtm = #{edctnEndDtm}
			, fxnum_cnt = #{fxnumCnt}
			, fxnum_impsb_yn = #{fxnumImpsbYn}
			, rcrmt_mthd_cd = #{rcrmtMthdCd}
			, pic_nm = #{picNm}
			, pic_email = #{picEmail}
			, pic_tel_no = #{picTelNo}
			, cprtn_instt_seq = #{cprtnInsttSeq}
			, edctn_ntctn_file_seq = #{edctnNtctnFileSeq}
			, place_seq = #{placeSeq}
			, srv_seq = #{srvSeq}
			, exam_seq = #{examSeq}
			, srv_strt_dtm = #{srvStrtDtm}
			, srv_end_dtm = #{srvEndDtm}
			, exam_strt_dtm = #{examStrtDtm}
			, exam_end_dtm = #{examEndDtm}
			, cmptn_auto_yn = #{cmptnAutoYn}
			, otsd_exam_ptcpt_yn = #{otsdExamPtcptYn}
			, bdget_expns_yn = #{bdgetExpnsYn}
			, expns_cprtn_instt_seq = #{expnsCprtnInsttSeq}
			, expns_pmt = #{expnsPmt}
			, exps_yn = #{expsYn}
			, edctn_cmpltn_yn = #{edctnCmpltnYn}
			, mod_id = #{modId}
			, mod_ip = #{modIp}
			, mod_dtm = now()
		where 1=1
			and edctn_seq = #{edctnSeq}
			and episd_year = #{orgEpisdYear}
			and episd_ord = #{orgEpisdOrd}
	</update>

	<!--
         쿼리명 : EBBEpisdMapper.deleteEpisd
         설  명 : 교육차수 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.15   김학규       최초생성
    -->
	<delete id="deleteEpisdDtl" parameterType="EBBEpisdDTO">
		DELETE /* EBBEpisdMapper.deleteEpisdDtl */
			ed_edctn_episd_mst, ed_edctn_isttr_rel, ed_edctn_lctr_dtl, ed_edctn_bdget_expns_dtl
		FROM ed_edctn_episd_mst
		LEFT JOIN ed_edctn_isttr_rel ON ed_edctn_isttr_rel.edctn_seq = ed_edctn_episd_mst.edctn_seq AND ed_edctn_isttr_rel.episd_ord = ed_edctn_episd_mst.episd_ord AND ed_edctn_isttr_rel.episd_year = ed_edctn_episd_mst.episd_year
		LEFT JOIN ed_edctn_lctr_dtl ON ed_edctn_lctr_dtl.edctn_seq = ed_edctn_episd_mst.edctn_seq AND ed_edctn_lctr_dtl.episd_ord = ed_edctn_episd_mst.episd_ord AND ed_edctn_lctr_dtl.episd_year = ed_edctn_episd_mst.episd_year
		LEFT JOIN ed_edctn_bdget_expns_dtl ON ed_edctn_bdget_expns_dtl.edctn_seq = ed_edctn_episd_mst.edctn_seq AND ed_edctn_bdget_expns_dtl.episd_ord = ed_edctn_episd_mst.episd_ord AND ed_edctn_bdget_expns_dtl.episd_year = ed_edctn_episd_mst.episd_year
		WHERE ed_edctn_episd_mst.episd_seq IN
		<foreach collection="episdSeqList" item="episdSeqList" index="index" separator=", " open="(" close=")">
			#{episdSeqList}
		</foreach>
	</delete>

	<!--
         쿼리명 : EBBEpisdMapper.deleteBdgetList
         설  명 : 교육차수 - 예산/지출내역 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.15   김학규       최초생성
    -->
	<delete id="deleteBdgetList" parameterType="EBBEpisdDTO">
		delete from ed_edctn_bdget_expns_dtl
	   	where 1=1  /* EBBEpisdMapper.deleteBdgetList */
	   		and edctn_seq = #{edctnSeq}
	   		and episd_ord = #{episdOrd}
	   		and episd_year = #{episdYear}
	</delete>

	<!--
             쿼리명 : EBBEpisdMapper.insertIsttrRel
             설  명 : 교육차수 - 교육강사관계를 등록한다
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertBdgetList" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEpisd*/ ed_edctn_bdget_expns_dtl (
			edctn_seq
			, episd_ord
			, cd
			, episd_year
			, pmt
			, etc_nm
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES
		<foreach collection="bdgetList" item="bdgetList" index="index" separator=" , " open="" close=";">
			(
			#{bdgetList.edctnSeq}
			, #{bdgetList.episdOrd}
			, #{bdgetList.cd}
			, #{bdgetList.episdYear}
			, #{bdgetList.pmt}
			, #{bdgetList.etcNm}
			, #{regId}
			, #{regIp}
			, now()
			, #{modId}
			, #{modIp}
			, now()
			)
		</foreach>
	</insert>



	<!--
      쿼리명 : EBBEpisdMapper.selectBdgetDtlList
      설  명 : 교육차수관리 - 강사관계를 호출한다.
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.24   김학규       최초생성
 	-->
	<select id="selectBdgetDtlList" parameterType="EBBBdgetDTO" resultType="EBBBdgetDTO">
		select /*EBBEpisdMapper.selectBdgetDtlList */
			edctn_seq
			, episd_ord
			, cd
            , episd_year
            , pmt
		     , etc_nm
            , reg_id
            , reg_ip
            , reg_dtm
            , mod_id
            , mod_ip
            , mod_dtm
		from ed_edctn_bdget_expns_dtl
		where 1=1
		  and edctn_seq = #{edctnSeq}
		  and episd_year = #{episdYear}
		  and episd_ord = #{episdOrd}
	</select>




	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdSrvRstDtl
      설  명 : 교육차수관리 - 만족도 결과 통계 호출
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectEpisdSrvRstDtl" parameterType="EBBEpisdDTO" resultType="EBBSrvRstDTO">
		SELECT /* EBBEpisdMapper.selectEpisdSrvRstDtl */
			EDCTN_SEQ
			 , EPISD_YEAR
			 , EPISD_ORD
			 , SRV_SEQ
			 ,SUM(CNT1) AS T1
			 ,SUM(CNT2) AS T2
			 ,SUM(CNT3) AS T3
			 ,SUM(CNT4) AS T4
			 ,SUM(CNT5) AS T5
			 ,SUM(CNT6) AS T6
			 ,SUM(CNT7) AS T7
			 ,SUM(CNT8) AS T8
			 ,SUM(CNT9) AS T9

			 ,SUM(CNT01) AS A1
			 ,SUM(CNT02) AS A2
			 ,SUM(CNT03) AS A3
			 ,SUM(CNT04) AS A4
			 ,SUM(CNT05) AS A5
			 ,SUM(CNT06) AS A6
			 ,SUM(CNT07) AS A7
		FROM
			(
				SELECT

					EDCTN_SEQ
					 , EPISD_YEAR
					 , EPISD_ORD
					 , A.SRV_SEQ
					 , CASE WHEN DEPT_CD = 'MEM_CD02002' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT1
					 , CASE WHEN DEPT_CD = 'MEM_CD02003' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT2
					 , CASE WHEN DEPT_CD = 'MEM_CD02004' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT3
					 , CASE WHEN DEPT_CD = 'MEM_CD02005' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT4
					 , CASE WHEN DEPT_CD = 'MEM_CD02006' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT5
					 , CASE WHEN DEPT_CD = 'MEM_CD02007' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT6
					 , CASE WHEN DEPT_CD = 'MEM_CD02008' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT7
					 , CASE WHEN DEPT_CD = 'MEM_CD02009' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT8
					 , CASE WHEN DEPT_CD = 'MEM_CD02010' THEN COUNT(C.DEPT_CD) ELSE 0 END AS CNT9

					 , CASE WHEN PSTN_CD = 'MEM_CD01001' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT01
					 , CASE WHEN PSTN_CD = 'MEM_CD01002' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT02
					 , CASE WHEN PSTN_CD = 'MEM_CD01003' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT03
					 , CASE WHEN PSTN_CD = 'MEM_CD01004' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT04
					 , CASE WHEN PSTN_CD = 'MEM_CD01005' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT05
					 , CASE WHEN PSTN_CD = 'MEM_CD01006' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT06
					 , CASE WHEN PSTN_CD = 'MEM_CD01007' THEN COUNT(C.PSTN_CD) ELSE 0 END AS CNT07

				FROM ED_EDCTN_EPISD_MST A
						 LEFT JOIN (
					SELECT MEM_SEQ, srv_seq, rfnc_seq, rfnc_cd FROM SV_RSPN_MST
				) B ON A.srv_seq = B.srv_seq AND b.rfnc_seq = A.episd_seq

						 LEFT JOIN
					 (
						 SELECT MEM_SEQ, MEM_CD, DEPT_CD, PSTN_CD FROM co_mem_mst where mem_cd = 'CP'
					 ) C ON B.mem_seq = C.mem_seq
						 LEFT JOIN
					 (
						 SELECT CD
						 FROM CO_CODE_MST
						 WHERE PARNT_SEQ IN
							   (SELECT CD_SEQ
								FROM CO_CODE_MST
								WHERE CD IN ('MEM_CD01', 'MEM_CD02'))
					 ) T2 ON C.DEPT_CD = T2.CD
				WHERE C.MEM_CD = 'CP' AND B.rfnc_cd = 'EDU'
				GROUP BY EDCTN_SEQ, EPISD_YEAR, EPISD_ORD, B.SRV_SEQ, DEPT_CD, PSTN_CD
			) T
		WHERE 1=1
		  and edctn_seq = #{edctnSeq}
		  and episd_year = #{episdYear}
		  and episd_ord = #{episdOrd}

		GROUP BY EDCTN_SEQ, EPISD_YEAR, EPISD_ORD, SRV_SEQ


	</select>


	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdPtcptListCnt
      설  명 : 교육차수관리 - 참여자 목록 카운트
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectEpisdPtcptListCnt" parameterType="EBBEpisdDTO" resultType="java.lang.Integer">
		select /* EBBEpisdMapper.selectEpisdPtcptListCnt */
			count(*)
		from ep_edctn_ptcpt_mst a
				 left join(select mem_seq, id, name, hp_no, email, reg_dtm from co_mem_mst where 1=1 and mem_cd = 'CP') b on a.mem_seq = b.mem_seq
				 left join(select cmpn_nm, ctgry_cd, bsnm_no from cp_cmpn_mst where 1=1) c on c.bsnm_no = a.ptcpt_bsnm_no
				 left join(SELECT edctn_seq, episd_year, episd_ord, edctn_strt_dtm, edctn_end_dtm, otsd_exam_ptcpt_yn, edctn_stts_cd FROM ed_edctn_episd_mst) d ON d.edctn_seq = a.edctn_seq AND d.episd_year = a.episd_year AND d.episd_ord = a.episd_ord
		where 1=1
		  and a.edctn_seq = #{edctnSeq}
		  and a.episd_year = #{episdYear}
		  and a.episd_ord = #{episdOrd}
		  and a.stts_cd != 'EDU_STTS_CD04'
	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectEpisdPtcptList
      설  명 : 교육차수관리 - 참여자 목록
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectEpisdPtcptList" parameterType="EBBEpisdDTO" resultType="EBBPtcptDTO">
		select /* EBBEpisdMapper.selectEpisdPtcptList */
			a.ptcpt_seq
		    , a.mem_seq
			, b.id
			, b.name
			, (select cmpn_nm from cp_cmpn_mst where bsnm_no = a.ptcpt_bsnm_no) as cmpn_nm
			, (select cd_nm from co_code_mst where cd = c.ctgry_cd) as ctgry_nm
			, a.ptcpt_bsnm_no /*사업자등록번호*/
			, b.hp_no
			, b.email
		    , b.dept_cd
			, (select cd_nm from co_code_mst where  cd=b.dept_cd ) as dept_cd_nm
		    , b.dept_dtl_nm
		    , b.pstn_cd
			, (select cd_nm from co_code_mst where  cd=b.pstn_cd ) as pstn_cd_nm
		    , b.pstn_nm
		    , a.stts_cd
		    , (select cd_nm from co_code_mst where cd = a.stts_cd) as stts_cd_nm
			, a.reg_dtm as edu_dtm
			, b.reg_dtm
			, a.cmptn_yn
			, a.exam_score
		    , e.exam_ptcpt_seq
			, otsd_exam_ptcpt_yn
			, case when d.edctn_stts_cd = 'EDCTN_STTS_CD01' then /*개강일 경우*/
					case when a.stts_cd = 'EDU_STTS_CD01' then /*참여자 상태 : 신청*/
							case when NOW()  <![CDATA[<]]> d.edctn_strt_dtm then '교육대기'
									when d.edctn_strt_dtm <![CDATA[<]]> NOW() AND NOW() <![CDATA[<]]>  d.edctn_end_dtm  then '교육중'
									when d.edctn_end_dtm <![CDATA[<]]> NOW()  then '교육종료'
							end
							when a.stts_cd = 'EDU_STTS_CD02' then '신청취소'
						 when a.stts_cd = 'EDU_STTS_CD06' then '교육취소'
					end

			when d.edctn_stts_cd = 'EDCTN_STTS_CD02' then '교육취소'  /*폐강일 경우*/
		end edu_stat

		, ifnull(ROUND(((SELECT COUNT(atndc_dtm) FROM ep_edctn_atndc_dtl WHERE ptcpt_seq = a.ptcpt_seq AND atndc_dtm IS NOT NULL) / (select COUNT(edctn_dt) FROM ep_edctn_atndc_dtl WHERE ptcpt_seq = a.ptcpt_seq))*100), '0') as  edu_atndc/*출석률*/
		from ep_edctn_ptcpt_mst a
				left join(select mem_seq, id, name, hp_no, email, dept_cd, dept_dtl_nm, pstn_cd, pstn_nm, reg_dtm from co_mem_mst where 1=1 and mem_cd = 'CP') b on a.mem_seq = b.mem_seq
				left join(select cmpn_nm, ctgry_cd, bsnm_no from cp_cmpn_mst where 1=1) c on c.bsnm_no = a.ptcpt_bsnm_no
				left join(SELECT edctn_seq, episd_year, episd_ord, edctn_strt_dtm, edctn_end_dtm, otsd_exam_ptcpt_yn, edctn_stts_cd FROM ed_edctn_episd_mst) d ON d.edctn_seq = a.edctn_seq AND d.episd_year = a.episd_year AND d.episd_ord = a.episd_ord
				left join(select ptcpt_seq, exam_ptcpt_seq from ep_edctn_exam_ptcpt_mst) e on e.ptcpt_seq = a.ptcpt_seq
		where 1=1
		  and a.edctn_seq = #{edctnSeq}
		  and a.episd_year = #{episdYear}
		  and a.episd_ord = #{episdOrd}
		  and a.stts_cd != 'EDU_STTS_CD04'
		order by
			edu_dtm desc

		<if test="excelYn != 'Y'.toString() ">
			limit #{firstIndex}, #{recordCountPerPage}
		</if>

	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectPtcptAtndcList
      설  명 : 교육차수관리 - 참여자 목록 개인별 출석부 목록
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectPtcptAtndcList" parameterType="EBBPtcptDTO" resultType="EBBPtcptDTO">

		SELECT /*EBBEpisdMapper.selectPtcptAtndcList*/
		ptcpt_seq
		, edctn_dt
		, atndc_dtm
		, lvgrm_dtm
		, etc_nm
		FROM ep_edctn_atndc_dtl
		WHERE ptcpt_seq IN
		<foreach collection="ptcptList" item="ptcptList" index="index" separator=", " open="(" close=")">
			#{ptcptList.ptcptSeq}
		</foreach>

	</select>

	<!--
             쿼리명 : EBBEpisdMapper.updateEpisdPtcpt
             설  명 : 교육차수관리 - 참여자 목록 수정(평가점수, 수료상태 변경)
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<update id="updateEpisdPtcpt" parameterType="EBBEpisdDTO" >
		<foreach collection="ptcptList" item="ptcptList" index="index" separator=";" open="" close=";">
			update ep_edctn_ptcpt_mst set /* EBBEpisdMapper.updateEpisdPtcpt */

				mod_id = #{ptcptList.modId}
				, mod_ip = #{ptcptList.modIp}
				, mod_dtm = now()
				<if test='ptcptList.cmptnChangeYn =="Y" '>
					/*변경됐을때만*/
					, cmptn_yn = #{ptcptList.cmptnYn}
					, cmptn_dtm = now()
				</if>

				/*오프라인평가인경우에만 입력*/
				 <if test='ptcptList.otsdExamPtcptYn =="Y" '>
					, exam_score = #{ptcptList.examScore}
				</if>



			where 1=1
				and edctn_seq = #{ptcptList.edctnSeq}
				and episd_year = #{ptcptList.episdYear}
				and episd_ord = #{ptcptList.episdOrd}
				and ptcpt_seq = #{ptcptList.ptcptSeq}
		</foreach>
	</update>


	<!--
      쿼리명 : EBBEpisdMapper.selectFxnumChk
      설  명 : 교육차수관리 - 참여자 정원체크
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectFxnumChk" parameterType="EBBEpisdDTO" resultType="EBBEpisdDTO">
		select /* EBBEpisdMapper.selectFxnumChk */
				aa.edctn_seq
				, aa.episd_year
				, aa.episd_ord
				, aa.fxnum_impsb_yn
				, aa.fxnum_cnt
				, cnt
				, case when aa.fxnum_impsb_yn = 'N' then 'S'
						when aa.fxnum_impsb_yn = 'Y' then
						case when aa.cnt <![CDATA[<]]> aa.fxnum_cnt then 'S'
								else 'F'
						end
				end fxnum_stta
			FROM (SELECT
						edctn_seq
						, episd_year
						, episd_ord
						, fxnum_impsb_yn
						, fxnum_cnt
						, (SELECT COUNT(*) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord  ) AS cnt
			from ed_edctn_episd_mst a
			WHERE 1=1
				and edctn_seq = #{edctnSeq}
				and episd_year = #{episdYear}
				and episd_ord = #{episdOrd}
			) aa
	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectPtcptDtl
      설  명 : 교육차수 - 신청자 등록 전 확인
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.11.28   김학규       최초생성
 	-->
	<select id="selectPtcptDtl" parameterType="EBBPtcptDTO" resultType="EBBPtcptDTO">
			select
			ptcpt_seq
			, edctn_seq
			, episd_year
			, episd_ord
			, mem_seq
			, ptcpt_bsnm_no
			, gpc_id
			from ep_edctn_ptcpt_mst
			  WHERE 1=1
				and edctn_seq = #{edctnSeq}
				and episd_year = #{episdYear}
				and episd_ord = #{episdOrd}
			    <choose>
					<when test="memSeq != null and  memSeq != ''">
						and mem_seq = #{memSeq}
					</when>
					<otherwise>
						and ptcpt_seq = #{ptcptSeq}
					</otherwise>
				</choose>

	</select>

	<!--
      쿼리명 : EBBEpisdMapper.selectMemAtndcDtl
      설  명 : 교육차수 - 개인별 출석부
       수정일     수정자       수정내용
     ==========   ======    ==============
     2023.12.08   김학규       최초생성
 	-->
	<select id="selectMemAtndcDtl" parameterType="EBBPtcptDTO" resultType="EBBPtcptDTO">
		SELECT

			a.ptcpt_seq
			 , a.mem_seq
			 , (SELECT id FROM co_mem_mst WHERE mem_seq = a.mem_seq ) AS id
			 , (SELECT name FROM co_mem_mst WHERE mem_seq = a.mem_seq ) AS name
			 , b.edctn_dt
			 , b.atndc_dtm
			 , b.lvgrm_dtm
			 , b.etc_nm
		FROM ep_edctn_ptcpt_mst a, ep_edctn_atndc_dtl b
		WHERE a.ptcpt_seq = #{ptcptSeq}
		  AND a.ptcpt_seq = b.ptcpt_seq
	</select>

	<!--
             쿼리명 : EBBEpisdMapper.insertPtcptDtl
             설  명 : 교육차수 - 신청자 등록
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<insert id="insertPtcptDtl" parameterType="EBBPtcptDTO">
		INSERT INTO ep_edctn_ptcpt_mst (
			ptcpt_seq
			, edctn_seq
			, episd_year
			, episd_ord
			, mem_seq
			, ptcpt_bsnm_no
			, stts_cd
			, gpc_id
			, cmptn_yn
			, cmptn_dtm
			, exam_score
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
			, episd_seq
		) VALUES(
				#{ptcptSeq}
				, #{edctnSeq}
				, #{episdYear}
				, #{episdOrd}
				, #{memSeq}
				, #{ptcptBsnmNo}
				, 'EDU_STTS_CD01'
				, #{gpcId}
				, 'N'
				, null
				, null
				, #{regId}
				, #{regIp}
				, now()
				, #{modId}
				, #{modIp}
				, now()
				, #{episdSeq}
			)

	</insert>

	<!--
             쿼리명 : EBBEpisdMapper.insertAtndcList
             설  명 : 교육차수 - 신청자 출석 목록 등록
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.12.05   김학규       최초생성
        -->
	<insert id="insertAtndcList" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertAtndcList*/ ep_edctn_atndc_dtl (
			ptcpt_seq
			, edctn_dt
			, atndc_dtm
			, lvgrm_dtm
			, etc_nm
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES
		<foreach collection="ptcptList" item="ptcptList" index="index" separator=" , " open="" close=";">
			(
			#{ptcptList.ptcptSeq}
			, #{ptcptList.edctnDt}
			, #{ptcptList.atndcDtm}
			, #{ptcptList.lvgrmDtm}
			, #{ptcptList.etcNm}
			, #{ptcptList.regId}
			, #{ptcptList.regIp}
			, now()
			, #{ptcptList.modId}
			, #{ptcptList.modIp}
			, now()
			)
		</foreach>
	</insert>

	<!--
		 쿼리명 : EBBEpisdMapper.insertEdctnLctrDtl
		 설  명 : 교육차수 - 신청자  참여강의 상세 등록(온라인 강의)
		  수정일     수정자       수정내용
		==========   ======    ==============
		2023.12.11   김학규       최초생성
	-->

	<insert id="insertEdctnLctrDtl" parameterType="EBBEpisdDTO">
		insert into /*EBBEpisdMapper.insertEdctnLctrDtl*/ ep_edctn_lctr_dtl (
			ptcpt_seq
			, lctr_seq
			, edctn_seq
			, episd_ord
			, episd_year
			, episd_seq
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		) VALUES
			(
			#{ptcptList.ptcptSeq}
			, #{ptcptList.lctrSeq}
			, #{ptcptList.edctnSeq}
			, #{ptcptList.episdOrd}
			, #{ptcptList.episdYear}
			, #{ptcptList.episdSeq}
			, #{ptcptList.regId}
			, #{ptcptList.regIp}
			, now()
			, #{ptcptList.modId}
			, #{ptcptList.modIp}
			, now()
			)
	</insert>



	<!--
             쿼리명 : EBBEpisdMapper.updateAtndcList
             설  명 : 교육차수관리 - 참여자 목록 출석부 수정
              수정일     수정자       수정내용
            ==========   ======    ==============
            2023.11.02   김학규       최초생성
        -->
	<update id="updateAtndcList" parameterType="EBBEpisdDTO" >
		<foreach collection="ptcptList" item="ptcptList" index="index" separator=";" open="" close=";">
			<choose>
				<when test='ptcptList.deleteYn =="N"  '>
					update ep_edctn_atndc_dtl set /* EBBEpisdMapper.updateAtndcList */

					mod_id = #{ptcptList.modId}
					, mod_ip = #{ptcptList.modIp}
					, mod_dtm = now()

					<if test="ptcptList.atndcDtm != null and ptcptList.atndcDtm != ''">
						, atndc_dtm = #{ptcptList.atndcDtm}
					</if>
					<if test="ptcptList.lvgrmDtm != null and ptcptList.lvgrmDtm != ''">
						, lvgrm_dtm = #{ptcptList.lvgrmDtm}
					</if>

					, etc_nm = #{ptcptList.etcNm}


					where 1=1
					and ptcpt_seq = #{ptcptList.ptcptSeq}
					and edctn_dt = #{ptcptList.edctnDt}
				</when>
				<otherwise>

				</otherwise>

			</choose>

		</foreach>
	</update>


	<!--
         쿼리명 : EBBEpisdMapper.deleteSurveyRspn
         설  명 : 응답 삭제(초기화)
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.12.11   박준희       최초생성
    -->
	<delete id="deleteSurveyRspn" parameterType="EBBEpisdDTO">
		delete /* EBBEpisdMapper.deleteSurveyRspn */
		sv_rspn_mst , sv_sbjct_rspn_dtl , sv_mtlcc_rspn_dtl
		from sv_rspn_mst
		left join sv_sbjct_rspn_dtl on sv_rspn_mst.srv_rspn_seq = sv_sbjct_rspn_dtl.srv_rspn_seq
		left join sv_mtlcc_rspn_dtl on sv_rspn_mst.srv_rspn_seq = sv_mtlcc_rspn_dtl.srv_rspn_seq
		where sv_rspn_mst.srv_seq = #{srvSeq}
	</delete>

	<!--
         쿼리명 : EBBEpisdMapper.selectEpisdExelList
         설  명 : 교육차수관리 목록 출력(엑셀용)
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.12.18   김학규       최초생성
    -->
	<select id="selectEpisdExcelList" parameterType="EBBEpisdDTO" resultType="EBBEpisdExcelDTO">
		SELECT
		episd_seq
		, prnt_cd_nm /* 과정분류1 */
		, ctgry_cd_nm /* 과정분류2 */
		, nm /* 과정명 */
		, stduy_mthd_cd_nm /* 학습방식 */
		, stduy_time_cd_nm  /* 학습시간 */
		, cbsn_cd_nm /*업종*/
		, episd_year /*년도*/
		, episd_ord /* 차수 */
		, stduy_dd_cd_nm /*교육일*/
		, edctn_strt_dtm /* 교육기간 시작일 */
		, edctn_end_dtm /* 교육기간 종료일 */
		, place_nm /* 교육장소 */
		, cprtn_instt_nm /* 협력기관 */
		, fxnum_cnt /* 정원(명) */
		, edctn_status_nm /*교육상태*/
		, accs_cnt /* 신청인원 */
		, cmptn_cnt /*수료인원*/
		, ROUND((cmptn_cnt/accs_cnt)*100, 2) as atted_per /*참석률*/
		, c1 /*완성차*/
		, c2 /* 1차사 */
		, c3 /* 2차사 */
		, c4 /* 기타 */
		, SUM(CNT1) AS T1 /* 부서별 인원 - 품질 */
		, SUM(CNT2) AS T2 /* 부서별 인원 - RnD */
		, SUM(CNT3) AS T3 /* 부서별 인원 - 생산 */
		, SUM(CNT4) AS T4 /* 부서별 인원 - 구매 */
		, SUM(CNT5) AS T5 /* 부서별 인원 - 경영지원 */
		, SUM(CNT6) AS T6 /* 부서별 인원 - 업체평가 */
		, SUM(CNT7) AS T7 /* 부서별 인원 - 안전 */
		, SUM(CNT8) AS T8 /* 부서별 인원 - ESG */
		, SUM(CNT9) AS T9 /* 부서별 인원 - 기타 */

		, SUM(CNT01) AS A1 /* 직급별 인원 - 대표 */
		, SUM(CNT02) AS A2 /* 직급별 인원 - 임원 */
		, SUM(CNT03) AS A3 /* 직급별 인원 - 부장 */
		, SUM(CNT04) AS A4 /* 직급별 인원 - 과장/차장 */
		, SUM(CNT05) AS A5 /* 직급별 인원 - 사원/대리 */
		, SUM(CNT06) AS A6 /* 직급별 인원 - 조장/반창(계장) */
		, SUM(CNT07) AS A7 /* 직급별 인원 - 기타 */
		, A11 /*출석률*/
		, AVG_score /*평가점수(점)*/
		, '' AS A_12 /* 종합 평균 */
		, '' AS A_13 /* 전체(공통) */
		, '' AS A_14 /* 교육환경 */
		, '' AS A_15 /* 교육지원 */
		, '' AS A_16 /* 교육내용 */
		, '' AS A_17 /* 강사 */
		, pmt_c1 /* 강사시간1 */
		, pmt_c2 /* 강사시간2 */
		, pmt_c3 /* 강사시간3 */
		, pmt_c4 /* 강사시간4 */
		, pmt_c5 /* 강사시간5 */
		, pmt_c6 /* 강사시간6 */
		, SUM(pmt_a1 + pmt_a2 + pmt_a3 + pmt_a4 + pmt_a5 + pmt_a6 + pmt_a7 + pmt_a8 + pmt_a9 + pmt_a10) AS pmt_a0
		, pmt_a1 /* 부담금/대관비(원) */
		, pmt_a2 /* 강사비(원) */
		, pmt_a3 /* 교재비(원) */
		, pmt_a4 /* 식대(원) */
		, pmt_a5 /* 다과비(원) */
		, pmt_a6 /* 소모품비(원) */
		, pmt_a7 /* 발송비(원) */
		, pmt_a8 /* 재료비(원) */
		, pmt_a9 /* 집행비(원) */
		, pmt_a10 /* 기타(원) */
		, pmt_a11 /* 비고 */
		, SUM(pmt_b1 + pmt_b2 + pmt_b3 + pmt_b4 + pmt_b5 + pmt_b6 + pmt_b7 + pmt_b8 + pmt_b9 + pmt_b10) AS pmt_b0
		, pmt_b1 /* 부담금/대관비(원) */
		, pmt_b2 /* 강사비(원) */
		, pmt_b3 /* 교재비(원) */
		, pmt_b4 /* 식대(원) */
		, pmt_b5 /* 다과비(원) */
		, pmt_b6 /* 소모품비(원) */
		, pmt_b7 /* 발송비(원) */
		, pmt_b8 /* 재료비(원) */
		, pmt_b9 /* 집행비(원) */
		, pmt_b10 /* 기타(원) */
		, pmt_b11 /* 비고(원) */
		, isttrNm1
		, isttrNm2
		, isttrNm3
		, isttrNm4
		, isttrNm5
		, isttrNm6
		, reg_dtm
		, reg_ip
		, reg_id
		FROM (SELECT /*EBBEpisdMapper.selectEpisdList*/
		a.episd_seq
		, (select cd_nm from co_code_mst WHERE cd = LEFT(b.ctgry_cd, 7)) AS prnt_cd_nm/* 과정분류1 */
		, (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) AS ctgry_cd_nm /* 과정분류2 */
		, b.nm /* 과정명 */
		, (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm/* 학습방식 */
		, (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm /* 학습시간 */
		, (select cd_nm from co_code_mst where cd=a.cbsn_cd) AS cbsn_cd_nm/*업종*/
		, a.episd_year /*년도*/
		, a.episd_ord/*차수*/
		, (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) AS stduy_dd_cd_nm/*교육일*/
		, a.edctn_strt_dtm/* 교육기간 시작일 */
		, a.edctn_end_dtm/* 교육기간 종료일 */
		, (SELECT nm FROM ed_edctn_place_mst WHERE place_seq = a.place_seq) as place_nm/* 교육장소 */
		, (SELECT nm FROM ed_edctn_place_mst WHERE place_seq = a.cprtn_instt_seq) as cprtn_instt_nm/* 협력기관 */
		, a.fxnum_cnt/* 정원(명) */
		, case when edctn_stts_cd = 'EDCTN_STTS_CD01' then /*개강일 경우*/
		case when NOW() <![CDATA[<]]> edctn_strt_dtm then '교육대기'
		when NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm then '교육중'
		when NOW() <![CDATA[>]]> edctn_end_dtm then '교육완료'
		end
		when edctn_stts_cd = 'EDCTN_STTS_CD02' then '교육취소'  /*폐강일 경우*/
		END  AS edctn_status_nm /*교육상태*/
		, (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord AND stts_cd = 'EDU_STTS_CD01') AS accs_cnt /*신청인원*/
		, (SELECT COUNT(ptcpt_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord AND stts_cd = 'EDU_STTS_CD01' AND cmptn_yn = 'Y') AS cmptn_cnt/*수료인원(명)*/
		, ''AS A_10 /*참석율(%) = 수료인원/신청인원 */
		, CASE WHEN j.ctgry_cd = 'COMPANY01003' THEN j.ct_cnt ELSE 0 END AS c1 /*완성차*/
		, CASE WHEN j.ctgry_cd = 'COMPANY01001' THEN j.ct_cnt ELSE 0 END AS c2 /* 1차사 */
		, CASE WHEN j.ctgry_cd = 'COMPANY01002' THEN j.ct_cnt ELSE 0 END AS c3 /* 2차사 */
		, CASE WHEN j.ctgry_cd = 'COMPANY01004' THEN j.ct_cnt ELSE 0 END AS c4 /* 기타 */

		, CASE WHEN DEPT_CD = 'MEM_CD02002' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT1 /* 부서별 인원 - 품질 */
		, CASE WHEN DEPT_CD = 'MEM_CD02003' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT2 /* 부서별 인원 - RnD */
		, CASE WHEN DEPT_CD = 'MEM_CD02004' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT3 /* 부서별 인원 - 생산 */
		, CASE WHEN DEPT_CD = 'MEM_CD02005' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT4 /* 부서별 인원 - 구매 */
		, CASE WHEN DEPT_CD = 'MEM_CD02006' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT5 /* 부서별 인원 - 경영지원 */
		, CASE WHEN DEPT_CD = 'MEM_CD02007' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT6 /* 부서별 인원 - 업체평가 */
		, CASE WHEN DEPT_CD = 'MEM_CD02008' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT7 /* 부서별 인원 - 안전 */
		, CASE WHEN DEPT_CD = 'MEM_CD02009' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT8 /* 부서별 인원 - ESG */
		, CASE WHEN DEPT_CD = 'MEM_CD02010' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT9 /* 부서별 인원 - 기타 */

		, CASE WHEN PSTN_CD = 'MEM_CD01001' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT01 /* 직급별 인원 - 대표 */
		, CASE WHEN PSTN_CD = 'MEM_CD01002' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT02 /* 직급별 인원 - 임원 */
		, CASE WHEN PSTN_CD = 'MEM_CD01003' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT03 /* 직급별 인원 - 부장 */
		, CASE WHEN PSTN_CD = 'MEM_CD01004' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT04 /* 직급별 인원 - 과장/차장 */
		, CASE WHEN PSTN_CD = 'MEM_CD01005' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT05 /* 직급별 인원 - 사원/대리 */
		, CASE WHEN PSTN_CD = 'MEM_CD01006' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT06 /* 직급별 인원 - 조장/반창(계장) */
		, CASE WHEN PSTN_CD = 'MEM_CD01007' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT07 /* 직급별 인원 - 기타 */


		, ifnull(round((COUNT(i.atndc_dtm) / COUNT(i.edctn_dt))*100,1), 0) AS A11/*출석률*/
		, ROUND(avg(exam_score), 2) AS AVG_score /*평가 점수*/
		, '' AS A_12 /* 종합 평균 */
		, '' AS A_13 /* 전체(공통) */
		, '' AS A_14 /* 교육환경 */
		, '' AS A_15 /* 교육지원 */
		, '' AS A_16 /* 교육내용 */
		, '' AS A_17 /* 강사 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03001' THEN pmt ELSE NULL END) AS pmt_c1/* 강사시간1 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03002' THEN pmt ELSE NULL END) AS pmt_c2/* 강사시간2 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03003' THEN pmt ELSE NULL END) AS pmt_c3/* 강사시간3 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03004' THEN pmt ELSE NULL END) AS pmt_c4/* 강사시간4 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03005' THEN pmt ELSE NULL END) AS pmt_c5/* 강사시간5 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03006' THEN pmt ELSE NULL END) AS pmt_c6/* 강사시간6 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01001' THEN pmt ELSE NULL END) AS pmt_a1 /* 부담금/대관비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01002' THEN pmt ELSE NULL END) AS pmt_a2 /* 강사비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01003' THEN pmt ELSE NULL END) AS pmt_a3 /* 교재비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01004' THEN pmt ELSE NULL END) AS pmt_a4 /* 식대 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01005' THEN pmt ELSE NULL END) AS pmt_a5 /* 다과비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01006' THEN pmt ELSE NULL END) AS pmt_a6 /* 소모품비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01007' THEN pmt ELSE NULL END) AS pmt_a7 /* 발송비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01008' THEN pmt ELSE NULL END) AS pmt_a8 /* 재료비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01009' THEN pmt ELSE NULL END) AS pmt_a9 /* 집행비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01010' THEN pmt ELSE NULL END) AS pmt_a10 /* 기타(원) */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01011' THEN etc_nm ELSE NULL END) AS pmt_a11 /* 비고 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02001' THEN pmt ELSE NULL END) AS pmt_b1 /* 부담금/대관비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02002' THEN pmt ELSE NULL END) AS pmt_b2 /* 강사비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02003' THEN pmt ELSE NULL END) AS pmt_b3 /* 교재비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02004' THEN pmt ELSE NULL END) AS pmt_b4 /* 식대 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02005' THEN pmt ELSE NULL END) AS pmt_b5 /* 다과비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02006' THEN pmt ELSE NULL END) AS pmt_b6 /* 소모품비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02007' THEN pmt ELSE NULL END) AS pmt_b7 /* 발송비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02008' THEN pmt ELSE NULL END) AS pmt_b8 /* 재료비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02009' THEN pmt ELSE NULL END) AS pmt_b9 /* 집행비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02010' THEN pmt ELSE NULL END) AS pmt_b10 /* 기타(원) */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02011' THEN etc_nm ELSE NULL END) AS pmt_b11 /* 비고 */
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r1) AS isttrNm1
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r2) AS isttrNm2
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r3) AS isttrNm3
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r4) AS isttrNm4
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r5) AS isttrNm5
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r6) AS isttrNm6
		, a.reg_dtm
		, a.reg_ip
		, a.reg_id
		FROM ed_edctn_episd_mst a
		LEFT JOIN ed_edctn_prcs_mst b ON b.edctn_seq = a.edctn_seq
		LEFT OUTER JOIN ( SELECT CD AS bd_cd, PMT, ETC_NM, EDCTN_SEQ, EPISD_ORD, EPISD_YEAR FROM ed_edctn_bdget_expns_dtl) C ON c.EDCTN_SEQ = a.EDCTN_SEQ AND c.EPISD_ORD = a.EPISD_ORD AND c.EPISD_YEAR = a.EPISD_YEAR

		LEFT OUTER JOIN ( SELECT MEM_SEQ, srv_seq, rfnc_seq, rfnc_cd FROM sv_rspn_mst ) d ON A.srv_seq = d.srv_seq AND d.rfnc_seq = A.episd_seq AND d.rfnc_cd = 'EDU'
		LEFT OUTER JOIN ( SELECT MEM_SEQ, MEM_CD, DEPT_CD, PSTN_CD FROM co_mem_mst where mem_cd = 'CP' ) e ON d.mem_seq = e.mem_seq
		LEFT OUTER JOIN (
		SELECT CD FROM co_code_mst
		WHERE PARNT_SEQ IN (
			SELECT CD_SEQ FROM CO_CODE_MST
			WHERE CD IN ('MEM_CD01', 'MEM_CD02')
		)
		) T2 ON e.DEPT_CD = T2.CD
		LEFT OUTER JOIN( SELECT exam_score, edctn_seq, episd_year, episd_ord FROM ep_edctn_ptcpt_mst) f ON f.edctn_seq = a.edctn_seq AND f.episd_year = a.episd_year AND f.episd_ord = a.episd_ord
		LEFT JOIN (SELECT
							isttr_tb.edctn_seq
							,isttr_tb.episd_seq
							,isttr_tb.episd_year
							,isttr_tb.episd_ord
							,isttr_tb.isttr_seq
							,MAX(CASE WHEN orders = 1 THEN isttr_seq ELSE NULL END) AS r1
							,MAX(CASE WHEN orders = 2 THEN isttr_seq ELSE NULL END) AS r2
							,MAX(CASE WHEN orders = 3 THEN isttr_seq ELSE NULL END) AS r3
							,MAX(CASE WHEN orders = 4 THEN isttr_seq ELSE NULL END) AS r4
							,MAX(CASE WHEN orders = 5 THEN isttr_seq ELSE NULL END) AS r5
							,MAX(CASE WHEN orders = 6 THEN isttr_seq ELSE NULL END) AS r6
						FROM (
							SELECT
								aaa.edctn_seq
								,aaa.episd_year
								,aaa.episd_ord
								,aaa.episd_seq
								,b2.isttr_seq
								,(SELECT COUNT(*) FROM ed_edctn_isttr_rel g2 WHERE g2.edctn_seq = aaa.edctn_seq AND g2.episd_year = aaa.episd_year AND g2.episd_ord = aaa.episd_ord AND g2.isttr_seq <![CDATA[<=]]> b2.isttr_seq) AS orders
							FROM ed_edctn_episd_mst aaa
							LEFT JOIN ed_edctn_isttr_rel b2 ON b2.edctn_seq = aaa.edctn_seq AND b2.episd_year = aaa.episd_year AND b2.episd_ord = aaa.episd_ord
						) AS isttr_tb
					GROUP BY isttr_tb.episd_seq) g ON g.edctn_seq = a.edctn_seq AND g.episd_year = a.episd_year AND g.episd_ord = a.episd_ord
		LEFT JOIN (SELECT ptcpt_seq, ptcpt_bsnm_no, edctn_seq, episd_year, episd_ord, stts_cd from ep_edctn_ptcpt_mst WHERE stts_cd = 'EDU_STTS_CD01' GROUP BY ptcpt_seq) h ON h.edctn_seq = a.edctn_seq AND h.episd_year = a.episd_year AND h.episd_ord = a.episd_ord
		LEFT JOIN (SELECT ptcpt_seq AS at_ptcpt_seq, edctn_dt, atndc_dtm FROM ep_edctn_atndc_dtl) i ON i.at_ptcpt_seq = h.ptcpt_seq
		LEFT JOIN(
			SELECT
				ctgry_cd
				, COUNT(ctgry_cd) AS ct_cnt
				, episdmst.episd_seq
			FROM cp_cmpn_mst cmpn
				inner JOIN ep_edctn_ptcpt_mst ptcpt on cmpn.BSNM_NO = ptcpt.ptcpt_bsnm_no
				inner JOIN ed_edctn_episd_mst episdmst ON episdmst.episd_seq = ptcpt.episd_seq
			GROUP BY episd_seq, ctgry_cd
		) j ON j.episd_seq = a.episd_seq

		GROUP BY a.EPISD_ORD
		) AA
		<include refid="selectEpisdListwhereSql" />

		GROUP BY episd_seq
	</select>

	<!--
         쿼리명 : EBBEpisdMapper.selectEpisdExelListCnt
         설  명 : 교육차수관리 엑셀 출력 카운트
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.12.18   김학규       최초생성
    -->
	<select id="selectEpisdExcelListCnt" parameterType="EBBEpisdDTO" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM (SELECT /*EBBEpisdMapper.selectEpisdList*/
		a.episd_seq
		, (select cd_nm from co_code_mst WHERE cd = LEFT(b.ctgry_cd, 7)) AS prnt_cd_nm/* 과정분류1 */
		, (select cd_nm from co_code_mst WHERE cd = b.ctgry_cd) AS ctgry_cd_nm /* 과정분류2 */
		, b.nm /* 과정명 */
		, (select cd_nm from co_code_mst where cd=b.stduy_mthd_cd) as stduy_mthd_cd_nm/* 학습방식 */
		, (select cd_nm from co_code_mst where cd=b.stduy_time_cd) as stduy_time_cd_nm /* 학습시간 */
		, (select cd_nm from co_code_mst where cd=a.cbsn_cd) AS cbsn_cd_nm/*업종*/
		, a.episd_year /*년도*/
		, a.episd_ord/*차수*/
		, (select cd_nm from co_code_mst where cd=b.stduy_dd_cd) AS stduy_dd_cd_nm/*교육일*/
		, a.edctn_strt_dtm/* 교육기간 시작일 */
		, a.edctn_end_dtm/* 교육기간 종료일 */
		, (SELECT nm FROM ed_edctn_place_mst WHERE place_seq = a.place_seq) as place_nm/* 교육장소 */
		, (SELECT nm FROM ed_edctn_place_mst WHERE place_seq = a.cprtn_instt_seq) as cprtn_instt_nm/* 협력기관 */
		, a.fxnum_cnt/* 정원(명) */
		, case when edctn_stts_cd = 'EDCTN_STTS_CD01' then /*개강일 경우*/
		case when NOW() <![CDATA[<]]> edctn_strt_dtm then '교육대기'
		when NOW() <![CDATA[>]]> edctn_strt_dtm AND NOW() <![CDATA[<]]> edctn_end_dtm then '교육중'
		when NOW() <![CDATA[>]]> edctn_end_dtm then '교육완료'
		end
		when edctn_stts_cd = 'EDCTN_STTS_CD02' then '교육취소'  /*폐강일 경우*/
		END  AS edctn_status_nm /*교육상태*/
		, (SELECT count(mem_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord AND stts_cd = 'EDU_STTS_CD01') AS accs_cnt /*신청인원*/
		, (SELECT COUNT(ptcpt_seq) FROM ep_edctn_ptcpt_mst WHERE edctn_seq = a.edctn_seq AND episd_year = a.episd_year AND episd_ord = a.episd_ord AND stts_cd = 'EDU_STTS_CD01' AND cmptn_yn = 'Y') AS cmptn_cnt/*수료인원(명)*/
		, ''AS A_10 /*참석율(%) = 수료인원/신청인원 */
		, CASE WHEN j.ctgry_cd = 'COMPANY01003' THEN j.ct_cnt ELSE 0 END AS c1 /*완성차*/
		, CASE WHEN j.ctgry_cd = 'COMPANY01001' THEN j.ct_cnt ELSE 0 END AS c2 /* 1차사 */
		, CASE WHEN j.ctgry_cd = 'COMPANY01002' THEN j.ct_cnt ELSE 0 END AS c3 /* 2차사 */
		, CASE WHEN j.ctgry_cd = 'COMPANY01004' THEN j.ct_cnt ELSE 0 END AS c4 /* 기타 */

		, CASE WHEN DEPT_CD = 'MEM_CD02002' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT1 /* 부서별 인원 - 품질 */
		, CASE WHEN DEPT_CD = 'MEM_CD02003' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT2 /* 부서별 인원 - RnD */
		, CASE WHEN DEPT_CD = 'MEM_CD02004' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT3 /* 부서별 인원 - 생산 */
		, CASE WHEN DEPT_CD = 'MEM_CD02005' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT4 /* 부서별 인원 - 구매 */
		, CASE WHEN DEPT_CD = 'MEM_CD02006' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT5 /* 부서별 인원 - 경영지원 */
		, CASE WHEN DEPT_CD = 'MEM_CD02007' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT6 /* 부서별 인원 - 업체평가 */
		, CASE WHEN DEPT_CD = 'MEM_CD02008' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT7 /* 부서별 인원 - 안전 */
		, CASE WHEN DEPT_CD = 'MEM_CD02009' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT8 /* 부서별 인원 - ESG */
		, CASE WHEN DEPT_CD = 'MEM_CD02010' THEN COUNT(e.DEPT_CD) ELSE 0 END AS CNT9 /* 부서별 인원 - 기타 */

		, CASE WHEN PSTN_CD = 'MEM_CD01001' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT01 /* 직급별 인원 - 대표 */
		, CASE WHEN PSTN_CD = 'MEM_CD01002' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT02 /* 직급별 인원 - 임원 */
		, CASE WHEN PSTN_CD = 'MEM_CD01003' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT03 /* 직급별 인원 - 부장 */
		, CASE WHEN PSTN_CD = 'MEM_CD01004' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT04 /* 직급별 인원 - 과장/차장 */
		, CASE WHEN PSTN_CD = 'MEM_CD01005' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT05 /* 직급별 인원 - 사원/대리 */
		, CASE WHEN PSTN_CD = 'MEM_CD01006' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT06 /* 직급별 인원 - 조장/반창(계장) */
		, CASE WHEN PSTN_CD = 'MEM_CD01007' THEN COUNT(e.PSTN_CD) ELSE 0 END AS CNT07 /* 직급별 인원 - 기타 */


		, ifnull(round((COUNT(i.atndc_dtm) / COUNT(i.edctn_dt))*100,1), 2) AS A11/*출석률*/
		, ROUND(avg(exam_score), 2) AS AVG_score /*평가 점수*/
		, '' AS A_12 /* 종합 평균 */
		, '' AS A_13 /* 전체(공통) */
		, '' AS A_14 /* 교육환경 */
		, '' AS A_15 /* 교육지원 */
		, '' AS A_16 /* 교육내용 */
		, '' AS A_17 /* 강사 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03001' THEN pmt ELSE NULL END) AS pmt_c1/* 강사시간1 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03002' THEN pmt ELSE NULL END) AS pmt_c2/* 강사시간2 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03003' THEN pmt ELSE NULL END) AS pmt_c3/* 강사시간3 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03004' THEN pmt ELSE NULL END) AS pmt_c4/* 강사시간4 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03005' THEN pmt ELSE NULL END) AS pmt_c5/* 강사시간5 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD03006' THEN pmt ELSE NULL END) AS pmt_c6/* 강사시간6 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01001' THEN pmt ELSE NULL END) AS pmt_a1 /* 부담금/대관비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01002' THEN pmt ELSE NULL END) AS pmt_a2 /* 강사비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01003' THEN pmt ELSE NULL END) AS pmt_a3 /* 교재비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01004' THEN pmt ELSE NULL END) AS pmt_a4 /* 식대 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01005' THEN pmt ELSE NULL END) AS pmt_a5 /* 다과비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01006' THEN pmt ELSE NULL END) AS pmt_a6 /* 소모품비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01007' THEN pmt ELSE NULL END) AS pmt_a7 /* 발송비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01008' THEN pmt ELSE NULL END) AS pmt_a8 /* 재료비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01009' THEN pmt ELSE NULL END) AS pmt_a9 /* 집행비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01010' THEN pmt ELSE NULL END) AS pmt_a10 /* 기타(원) */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD01011' THEN etc_nm ELSE NULL END) AS pmt_a11 /* 비고 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02001' THEN pmt ELSE NULL END) AS pmt_b1 /* 부담금/대관비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02002' THEN pmt ELSE NULL END) AS pmt_b2 /* 강사비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02003' THEN pmt ELSE NULL END) AS pmt_b3 /* 교재비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02004' THEN pmt ELSE NULL END) AS pmt_b4 /* 식대 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02005' THEN pmt ELSE NULL END) AS pmt_b5 /* 다과비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02006' THEN pmt ELSE NULL END) AS pmt_b6 /* 소모품비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02007' THEN pmt ELSE NULL END) AS pmt_b7 /* 발송비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02008' THEN pmt ELSE NULL END) AS pmt_b8 /* 재료비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02009' THEN pmt ELSE NULL END) AS pmt_b9 /* 집행비 */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02010' THEN pmt ELSE NULL END) AS pmt_b10 /* 기타(원) */
		, MAX(CASE bd_cd WHEN 'ED_BDGET_CD02011' THEN etc_nm ELSE NULL END) AS pmt_b11 /* 비고 */
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r1) AS isttrNm1
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r2) AS isttrNm2
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r3) AS isttrNm3
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r4) AS isttrNm4
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r5) AS isttrNm5
		, (SELECT name from cp_isttr_mst WHERE isttr_seq = g.r6) AS isttrNm6
		, a.reg_dtm
		, a.reg_ip
		, a.reg_id

		FROM ed_edctn_episd_mst a
		LEFT JOIN ed_edctn_prcs_mst b ON b.edctn_seq = a.edctn_seq
		LEFT OUTER JOIN ( SELECT CD AS bd_cd, PMT, ETC_NM, EDCTN_SEQ, EPISD_ORD, EPISD_YEAR FROM ed_edctn_bdget_expns_dtl) C ON c.EDCTN_SEQ = a.EDCTN_SEQ AND c.EPISD_ORD = a.EPISD_ORD AND c.EPISD_YEAR = a.EPISD_YEAR

		LEFT OUTER JOIN ( SELECT MEM_SEQ, srv_seq, rfnc_seq, rfnc_cd FROM sv_rspn_mst ) d ON A.srv_seq = d.srv_seq AND d.rfnc_seq = A.episd_seq AND d.rfnc_cd = 'EDU'
		LEFT OUTER JOIN ( SELECT MEM_SEQ, MEM_CD, DEPT_CD, PSTN_CD FROM co_mem_mst where mem_cd = 'CP' ) e ON d.mem_seq = e.mem_seq
		LEFT OUTER JOIN (
		SELECT CD FROM co_code_mst
		WHERE PARNT_SEQ IN (
		SELECT CD_SEQ FROM CO_CODE_MST
		WHERE CD IN ('MEM_CD01', 'MEM_CD02')
		)
		) T2 ON e.DEPT_CD = T2.CD
		LEFT OUTER JOIN( SELECT exam_score, edctn_seq, episd_year, episd_ord FROM ep_edctn_ptcpt_mst) f ON f.edctn_seq = a.edctn_seq AND f.episd_year = a.episd_year AND f.episd_ord = a.episd_ord
		LEFT JOIN (SELECT
		isttr_tb.edctn_seq
		,isttr_tb.episd_seq
		,isttr_tb.episd_year
		,isttr_tb.episd_ord
		,isttr_tb.isttr_seq
		,MAX(CASE WHEN orders = 1 THEN isttr_seq ELSE NULL END) AS r1
		,MAX(CASE WHEN orders = 2 THEN isttr_seq ELSE NULL END) AS r2
		,MAX(CASE WHEN orders = 3 THEN isttr_seq ELSE NULL END) AS r3
		,MAX(CASE WHEN orders = 4 THEN isttr_seq ELSE NULL END) AS r4
		,MAX(CASE WHEN orders = 5 THEN isttr_seq ELSE NULL END) AS r5
		,MAX(CASE WHEN orders = 6 THEN isttr_seq ELSE NULL END) AS r6
		FROM (
		SELECT
		aaa.edctn_seq
		,aaa.episd_year
		,aaa.episd_ord
		,aaa.episd_seq
		,b2.isttr_seq
		,(SELECT COUNT(*) FROM ed_edctn_isttr_rel g2 WHERE g2.edctn_seq = aaa.edctn_seq AND g2.episd_year = aaa.episd_year AND g2.episd_ord = aaa.episd_ord AND g2.isttr_seq <![CDATA[<=]]> b2.isttr_seq) AS orders
		FROM ed_edctn_episd_mst aaa
		LEFT JOIN ed_edctn_isttr_rel b2 ON b2.edctn_seq = aaa.edctn_seq AND b2.episd_year = aaa.episd_year AND b2.episd_ord = aaa.episd_ord
		) AS isttr_tb
		GROUP BY isttr_tb.episd_seq) g ON g.edctn_seq = a.edctn_seq AND g.episd_year = a.episd_year AND g.episd_ord = a.episd_ord
		LEFT JOIN (SELECT ptcpt_seq, ptcpt_bsnm_no, edctn_seq, episd_year, episd_ord, stts_cd from ep_edctn_ptcpt_mst WHERE stts_cd = 'EDU_STTS_CD01' GROUP BY ptcpt_seq) h ON h.edctn_seq = a.edctn_seq AND h.episd_year = a.episd_year AND h.episd_ord = a.episd_ord
		LEFT JOIN (SELECT ptcpt_seq AS at_ptcpt_seq, edctn_dt, atndc_dtm FROM ep_edctn_atndc_dtl) i ON i.at_ptcpt_seq = h.ptcpt_seq
		LEFT JOIN(
		SELECT
		ctgry_cd
		, COUNT(ctgry_cd) AS ct_cnt
		, episdmst.episd_seq
		FROM cp_cmpn_mst cmpn
		inner JOIN ep_edctn_ptcpt_mst ptcpt on cmpn.BSNM_NO = ptcpt.ptcpt_bsnm_no
		inner JOIN ed_edctn_episd_mst episdmst ON episdmst.episd_seq = ptcpt.episd_seq
		GROUP BY episd_seq, ctgry_cd
		) j ON j.episd_seq = a.episd_seq

		GROUP BY a.EPISD_ORD
		) AA

		<include refid="selectEpisdListwhereSql" />

	</select>



</mapper>


