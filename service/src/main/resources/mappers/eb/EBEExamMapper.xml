<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kap.service.dao.eb.EBEExamMapper">
	<!--
		쿼리명 : EXGExamMapper.selectExamList
		설  명 : 목록 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="selectExamList" parameterType="EXGExamMstSearchDTO" resultType="EXGExamMstSearchDTO">
		select /* EXGExamMapper.selectExamList */
		      exam_seq
			, a.ctgry_cd
			, (select cd_nm from co_code_mst WHERE cd = a.ctgry_cd) as ctgry_cd_nm
			, (select parnt_seq from co_code_mst WHERE cd = a.ctgry_cd) as parnt_seq
			, (SELECT GROUP_CONCAT(cd_nm SEPARATOR ' > ') FROM co_code_mst
			WHERE lft_val <![CDATA[<=]]> (SELECT lft_val FROM co_code_mst WHERE cd = a.ctgry_cd) AND rht_val <![CDATA[>=]]>
			(SELECT rht_val FROM co_code_mst WHERE cd = a.ctgry_cd)
			AND dpth =  2 AND dpth <![CDATA[>]]> 1) prnt_cd

			, (SELECT GROUP_CONCAT(cd_nm SEPARATOR ' > ') FROM co_code_mst
			WHERE lft_val <![CDATA[<=]]> (SELECT lft_val FROM co_code_mst WHERE cd = a.ctgry_cd) AND rht_val <![CDATA[>=]]>
			(SELECT rht_val FROM co_code_mst WHERE cd = a.ctgry_cd)
			AND dpth <![CDATA[<]]> 4 AND dpth <![CDATA[>]]> 1) prnt_cd_nm
		 	, nm
			, titl
			, exps_yn
			, reg_id
		    , (select name from co_adm_mst where id = a.reg_id ) reg_name
			, reg_dtm
			, mod_id
			, (select name from co_adm_mst where id = a.mod_id ) mod_name
			, mod_dtm
		from
			ex_exam_mst a
		<include refid="selectExamListWhereSql" />
		order by
			reg_dtm desc
		limit #{firstIndex}, #{recordCountPerPage}
	</select>
	<!--
		쿼리명 : EXGExamMapper.getExamListCnt
		설  명 : 목록 전체 갯수
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="getExamListCnt" parameterType="EXGExamMstSearchDTO" resultType="java.lang.Integer">
		select /* EXGExamMapper.getAdmListCnt */
			count(*)
		from
			ex_exam_mst a
		<include refid="selectExamListWhereSql" />
	</select>
	<!--
		쿼리명 : selectExamListWhereSql
		설  명 : 목록 조건
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2019.07.08    김학규       최초생성
    -->
	<sql id="selectExamListWhereSql">
		<where>
			<if test="strtDt != null and strtDt != ''.toString() ">
				<choose>
					<when test="srchDate == 1">
						AND reg_dtm <![CDATA[ > ]]> str_to_date(#{strtDt}, '%Y-%m-%d')
					</when>
					<when test="srchDate == 2">
						AND mod_dtm <![CDATA[ > ]]> str_to_date(#{strtDt}, '%Y-%m-%d')
					</when>
				</choose>
			</if>
			<if test="endDt != null and endDt != ''.toString() ">
				<choose>
					<when test="srchDate == 1">
						AND reg_dtm <![CDATA[ < ]]> date_add(str_to_date(#{endDt}, '%Y-%m-%d'), interval 1 day)
					</when>
					<when test="srchDate == 2">
						AND mod_dtm <![CDATA[ < ]]> date_add(str_to_date(#{endDt}, '%Y-%m-%d'), interval 1 day)
					</when>
				</choose>
			</if>
			<if test="expsYnList != null and expsYnList.size() > 0">
				and
				<foreach collection="expsYnList" item="expsYnList" index="index" open="(" close=")" separator=" or ">
					exps_yn = #{expsYnList}
				</foreach>
			</if>
			<if test="q != null and q != ''.toString() ">
				<choose>
					<when test="f == 1">
						and titl like concat('%', #{q}, '%')
					</when>
					<!--<when test="f == 2">
						and name like concat('%', #{q}, '%')
					</when>-->
					<when test="f == 2"><!-- 과정명 -->
						and nm like concat('%', #{q}, '%')
					</when>
					<when test="f == 3"><!-- 과정분류 -->
						and (select cd_nm from co_code_mst WHERE cd = a.ctgry_cd) like concat('%', #{q}, '%')
					</when>
					<when test="f == 4 ">
						and exists(select id from co_adm_mst where id = a.reg_id and (name like concat('%', #{q}, '%') or id like concat('%', #{q}, '%')))
					</when>
					<when test="f == 5">
						and exists(select id from co_adm_mst where id = a.mod_id and (name like concat('%', #{q}, '%') or id like concat('%', #{q}, '%')))
					</when>
					<otherwise>
						and (
							titl like concat('%', #{q}, '%')
							or exists(select id from co_adm_mst where id = a.reg_id and (name like concat('%', #{q}, '%') or id like concat('%', #{q}, '%')))
							or exists(select id from co_adm_mst where id = a.mod_id and (name like concat('%', #{q}, '%') or id like concat('%', #{q}, '%')))
						)
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>
	<!--
         쿼리명 : EXGExamMapper.deleteExamMst
         설  명 : 목록 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.10   김학규       최초생성
    -->
	<delete id="deleteExamMst" parameterType="EXGExamMstSearchDTO">
		delete /* EXGExamMapper.deleteExamMst */
		from
		ex_exam_mst
		<where>
			<choose>
				<when test="delValueList != null and delValueList.size() > 0">
					exam_seq in
					<foreach collection="delValueList" item="delValueList" index="index" separator=", " open="(" close=")">
						#{delValueList}
					</foreach>
				</when>
				<otherwise>
					exam_seq = #{detailsKey}
				</otherwise>
			</choose>
		</where>
	</delete>
	<!--
         쿼리명 : EXGExamMapper.deleteExamQstnDtl
         설  명 : 질문 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.10   김학규       최초생성
    -->
	<delete id="deleteExamQstnDtl" parameterType="EXGExamQstnDtlDTO">
		delete /* EXGExamMapper.deleteExamQstnDtl */
		from
		ex_exam_qstn_dtl
		where
		<choose>
			<when test="delValueList != null and delValueList.size() > 0">
				exam_seq in
				<foreach collection="delValueList" item="delValueList" index="index" separator=", " open="(" close=")">
					#{delValueList}
				</foreach>
			</when>
			<otherwise>
				exam_seq = #{detailsKey}
			</otherwise>
		</choose>
		<if test="qstnSeq != null ">
			and qstn_seq = #{qstnSeq}
		</if>
	</delete>
	<!--
         쿼리명 : EXGExamMapper.deleteExamExmplDtl
         설  명 : 보기 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.10   김학규       최초생성
    -->
	<delete id="deleteExamExmplDtl" parameterType="EXGExamExmplDtlDTO">
		delete /* EXGExamMapper.deleteExamExmplDtl */
		from
		ex_exam_exmpl_dtl
		where
		<choose>
			<when test="delValueList != null and delValueList.size() > 0">
				exam_seq in
				<foreach collection="delValueList" item="delValueList" index="index" separator=", " open="(" close=")">
					#{delValueList}
				</foreach>
			</when>
			<otherwise>
				exam_seq = #{detailsKey}
			</otherwise>
		</choose>
		<if test="qstnSeq != null ">
			and qstn_seq = #{qstnSeq}
		</if>
		<if test="exmplSeq != null ">
			and exmpl_seq = #{exmplSeq}
		</if>
	</delete>

	<!--
		쿼리명 : EXGExamMapper.getExamEdctnEpisdCnt
		설  명 : 평가지 교육 매핑 여부
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="getExamEdctnEpisdCnt" parameterType="EXGExamMstSearchDTO" resultType="java.lang.Integer">
		select /* EXGExamMapper.getExamEdctnEpisdCnt */
			count(*) recp_cnt
		from ex_exam_mst exam_mst join ed_edctn_episd_mst episd_mst
		on episd_mst.exam_seq = exam_mst.exam_seq
		<where>
			<choose>
				<when test="delValueList != null and delValueList.size() > 0">
					exam_mst.exam_seq in
					<foreach collection="delValueList" item="delValueList" index="index" separator=", " open="(" close=")">
						#{delValueList}
					</foreach>
				</when>
				<otherwise>
					exam_mst.exam_seq = #{detailsKey}
				</otherwise>
			</choose>
		</where>
	</select>

	<!--
         쿼리명 : EXGExamMapper.insertExamMst
         설  명 : 교육 시험 마스터 등록
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="insertExamMst" parameterType="EXGExamMstInsertDTO">
		insert /* EXGExamMapper.insertExamMst */ into ex_exam_mst
		(
		  	exam_seq
			, ctgry_cd
			, nm
			, titl
			, smmry_cntn
			, exps_yn
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		)
		values
			(
			  #{examSeq}
			, #{ctgryCd}
			, #{nm}
			, #{titl}
			, #{smmryCntn}
			, #{expsYn}
			, #{regId}
			, #{regIp}
			, now()
			, #{regId}
			, #{regIp}
			, now()
			)
	</insert>

	<!--
         쿼리명 : EXGExamMapper.insertExamQstnDtl
         설  명 : 교육 시험 질문 등록
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="insertExamQstnDtl" parameterType="EXGExamMstInsertDTO">
		insert /* EXGExamMapper.insertExamQstnDtl */ into ex_exam_qstn_dtl
		(
			  exam_seq
			, qstn_seq
			, srv_type_cd
			, qstn_nm
			, qstn_ord
			, scord
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		)
		values
		<foreach collection="exExamQstnDtlList" item="list" index="index" separator=" , " open="" close=";">
			(
			  #{list.examSeq}
			, #{list.qstnSeq}
			, #{list.srvTypeCd}
			, #{list.qstnNm}
			, #{list.qstnOrd}
			, #{list.scord}
			, #{list.regId}
			, #{list.regIp}
			, now()
			, #{list.regId}
			, #{list.regIp}
			, now()
			)
		</foreach>
	</insert>

	<!--
         쿼리명 : EXGExamMapper.insertExamExmplDtl
         설  명 : 교육 시험 보기 등록
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="insertExamExmplDtl" parameterType="EXGExamQstnDtlDTO">
		insert /* EXGExamMapper.insertExamExmplDtl */ into ex_exam_exmpl_dtl
		(
			  exam_seq
			, qstn_seq
			, exmpl_seq
			, exmpl_nm
			, exmpl_ord
			, cansw_yn
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		)
		values
		<foreach collection="exExamExmplDtlList" item="list" index="index" separator=" , " open="" close=";">
			(
			  #{list.examSeq}
			, #{list.qstnSeq}
			, #{list.exmplSeq}
			, #{list.exmplNm}
			, #{list.exmplOrd}
			, #{list.canswYn}
			, #{list.regId}
			, #{list.regIp}
			, now()
			, #{list.regId}
			, #{list.regIp}
			, now()
			)
		</foreach>
	</insert>

	<!--
		쿼리명 : EXGExamMapper.selectExamDtl
		설  명 : 교육 시험 마스터 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="selectExamDtl" parameterType="EXGExamMstSearchDTO" resultType="EXGExamMstInsertDTO">
		select /* EXGExamMapper.selectExamDtl */
			 exam_seq
			, ctgry_cd
			, (select cd_nm from co_code_mst WHERE cd = a.ctgry_cd) as ctgry_cd_nm
			, (select parnt_seq from co_code_mst WHERE cd = a.ctgry_cd) as parnt_seq

			, (SELECT GROUP_CONCAT(cd SEPARATOR ' > ') FROM co_code_mst
			   WHERE lft_val <![CDATA[<=]]> (SELECT lft_val FROM co_code_mst WHERE cd = a.ctgry_cd) AND rht_val <![CDATA[>=]]>
																										(SELECT rht_val FROM co_code_mst WHERE cd = a.ctgry_cd)
				 AND dpth =  2 AND dpth <![CDATA[>]]> 1) prnt_cd

			, (SELECT GROUP_CONCAT(cd_nm SEPARATOR ' > ') FROM co_code_mst
			   WHERE lft_val <![CDATA[<=]]> (SELECT lft_val FROM co_code_mst WHERE cd = a.ctgry_cd) AND rht_val <![CDATA[>=]]>
																										(SELECT rht_val FROM co_code_mst WHERE cd = a.ctgry_cd)
				 AND dpth <![CDATA[<]]> 4 AND dpth <![CDATA[>]]> 1) prnt_cd_nm
			, nm
			,titl
			,smmry_cntn
			,exps_yn
			,reg_id
			,reg_dtm
			,mod_id
			,mod_dtm
		from ex_exam_mst a
		where exam_seq = #{detailsKey}
	</select>

	<!--
		쿼리명 : EXGExamMapper.getExamQstnDtlList
		설  명 : 교육 시험 질문 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="getExamQstnDtlList" parameterType="EXGExamMstSearchDTO" resultType="EXGExamQstnDtlDTO">
		select /* EXGExamMapper.getExamQstnDtlList */
			  a.exam_seq
			 ,a.qstn_seq
			 ,a.srv_type_cd
			 ,(select cd_nm from co_code_mst where cd_id = 'EXG' and cd = a.srv_type_cd) as srv_type_cd_nm
			 ,a.qstn_nm
			 ,a.qstn_ord
			 ,a.scord
			 ,a.reg_id
			 ,a.reg_dtm
			 ,a.mod_id
			 ,a.mod_dtm
		from ex_exam_qstn_dtl a
		where a.exam_seq = #{detailsKey}
		order by a.qstn_ord asc
	</select>

	<!--
		쿼리명 : EXGExamMapper.getExamQstnRspnDtlList
		설  명 : 교육 시험 질문 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="getExamQstnRspnDtlList" parameterType="EXGExamMstSearchDTO" resultType="EXGExamQstnDtlDTO">
		select /* EXGExamMapper.getExamQstnRspnDtlList */
			  a.exam_seq
			 ,a.qstn_seq
			 ,a.srv_type_cd
			 ,(select cd_nm from co_code_mst where cd_id = 'EXG' and cd = a.srv_type_cd) as srv_type_cd_nm
			 ,a.qstn_nm
			 ,a.qstn_ord
			 ,a.scord
			 ,a.reg_id
			 ,a.reg_dtm
			 ,a.mod_id
			 ,a.mod_dtm
			 ,b.cansw_yn
			 ,b.qstn_score
		from ex_exam_qstn_dtl a left join ep_edctn_qstn_rspn_dtl b on a.exam_seq = b.exam_seq and a.qstn_seq = b.qstn_seq
		where a.exam_seq = #{detailsKey} and b.ptcpt_seq = #{ptcptSeq}
		order by a.qstn_ord asc
	</select>

	<!--
		쿼리명 : EXGExamMapper.getExamExmplDtlList
		설  명 : 교육 시험 보기 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="getExamExmplDtlList" parameterType="EXGExamMstSearchDTO" resultType="EXGExamExmplDtlDTO">
		select /* EXGExamMapper.getExamExmplDtlList */
			  a.exam_seq
			 ,a.qstn_seq
			 ,a.exmpl_seq
			 ,a.exmpl_nm
			 ,a.exmpl_ord
			 ,a.cansw_yn
			 ,a.reg_id
			 ,a.reg_dtm
			 ,a.mod_id
			 ,a.mod_dtm
			<if test="canswYn != null and canswYn != ''.toString() ">
			 ,(select scord from ex_exam_qstn_dtl where qstn_seq = a.qstn_seq) qstn_scord
			</if>
		from ex_exam_exmpl_dtl a
		where a.exam_seq = #{detailsKey}
		<if test="canswYn != null and canswYn != ''.toString() ">
			and a.cansw_yn = #{canswYn}
		</if>
		order by a.qstn_seq asc, a.exmpl_ord asc
	</select>

	<!--
		쿼리명 : EXGExamMapper.getExamExmplUserRspnDtlList
		설  명 : 교육 시험 답변 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="getExamExmplUserRspnDtlList" parameterType="EXGExamMstSearchDTO" resultType="EXGExamExmplRspnDtlDTO">
		select /* EXGExamMapper.getExamExmplUserRspnDtlList */
			a.exam_seq
			 ,a.qstn_seq
			 ,a.exam_ptcpt_seq
			 ,a.ptcpt_seq
			 ,a.exmpl_seq
			 ,'' sbjct_rply
			 ,a.cansw_yn
			 ,a.reg_id
			 ,a.reg_dtm
			 ,a.mod_id
			 ,a.mod_dtm
		from ep_edctn_mtlcc_rspn_dtl a
		where a.ptcpt_seq = #{ptcptSeq}
		UNION ALL
		select
			a.exam_seq
			 ,a.qstn_seq
			 ,a.exam_ptcpt_seq
			 ,a.ptcpt_seq
			 ,null exmpl_seq
			 ,a.sbjct_rply
			 ,a.cansw_yn
			 ,a.reg_id
			 ,a.reg_dtm
			 ,a.mod_id
			 ,a.mod_dtm
		from ep_edctn_sbjct_rspn_dtl a
		where a.ptcpt_seq = #{ptcptSeq}
		ORDER BY qstn_seq asc
	</select>

	<!--
		쿼리명 : EXGExamMapper.getExamQstnCanswList
		설  명 : 교육 시험 문항(보기답변) 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="getExamQstnCanswList" parameterType="EXGExamMstSearchDTO" resultType="EXGExamQstnDtlDTO">
		select /* EXGExamMapper.getExamQstnCanswList */
		 a.exam_seq
		,a.qstn_seq
		,a.scord
		,(select group_concat(exmpl_seq SEPARATOR ',') FROM ex_exam_exmpl_dtl where cansw_yn = 'Y' and qstn_seq = a.qstn_seq) exmpl_cansw
		from ex_exam_qstn_dtl a
		where a.exam_seq = #{detailsKey} AND (a.srv_type_cd = 'EXG_A' OR a.srv_type_cd = 'EXG_B')
		order by a.qstn_seq asc
	</select>

	<!--
		쿼리명 : EXGExamMapper.updateExamMstExpnYn
		설  명 : 교육에 매핑된 평가지는 사용여부만 수정
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<update id="updateExamMstExpnYn" parameterType="EXGExamMstInsertDTO">
		update /* EXGExamMapper.updateExamMstExpnYn */ ex_exam_mst
			set
			    exps_yn = #{expsYn}
				, mod_id = #{modId}
			    , mod_ip = #{modIp}
			    , mod_dtm = now()
		where
			exam_seq = #{detailsKey}
	</update>

	<!--
		쿼리명 : EXGExamMapper.updateExamMst
		설  명 : 평가지 수정
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<update id="updateExamMst" parameterType="EXGExamMstInsertDTO">
		update /* EXGExamMapper.updateExamMst */ ex_exam_mst
		set
			 exps_yn = #{expsYn}
		    , titl = #{titl}
		  	, ctgry_cd =#{ctgryCd}
		  	, nm = #{nm}
		    , smmry_cntn = #{smmryCntn}
		    , mod_id = #{modId}
		    , mod_ip = #{modIp}
		    , mod_dtm = now()
		where
			exam_seq = #{detailsKey}
	</update>

	<!--
         쿼리명 : EXGExamMapper.updateExamQstnDtlSequence
         설  명 : 교육 시험 질문 시퀀스 변경(For문을 돌려야해서 한번에 업데이트)
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<update id="updateSequenceGgn" parameterType="COEgovSeqDTO">
		update /* EXGExamMapper.updateExamQstnDtlSequence */ co_seq_mst
		set
			NEXT_ID = #{netxId}
		where
			TABLE_NAME = #{tableName}
	</update>

	<!--
		쿼리명 : EXGExamMapper.selectUserExamDtl
		설  명 : 사용자 평가지 조회
	      수정일      수정자       수정내용
        ==========   ========   ==============
        2023.11.09    김학규       최초생성
    -->
	<select id="selectUserExamDtl" parameterType="EXGExamMstSearchDTO" resultType="EXGExamEdctnPtcptMst">
		select /* EXGExamMapper.selectUserExamDtl */
			   ptcpt_mst.ptcpt_seq
			 , ptcpt_mst.edctn_seq
			 , ptcpt_mst.episd_year
			 , ptcpt_mst.episd_ord
			 , ptcpt_mst.mem_seq
			 , episd_mst.exam_seq
			 , prcs_mst.nm
			 , episd_mst.cbsn_cd
			 , (select code_mst.cd_nm from co_code_mst code_mst where code_mst.cd = episd_mst.cbsn_cd and code_mst.cd_id = 'CBSN_CD') cbsn_cd_nm
			 , prcs_mst.ctgry_cd
			 , (select GROUP_CONCAT(cd_nm SEPARATOR ' > ') FROM co_code_mst WHERE lft_val <![CDATA[<=]]> (SELECT lft_val FROM co_code_mst WHERE cd = prcs_mst.ctgry_cd) AND rht_val <![CDATA[>=]]> (SELECT rht_val FROM co_code_mst WHERE cd = prcs_mst.ctgry_cd) AND dpth <![CDATA[<]]> 4 AND dpth> 1) ctgry_cd_nm
			 , (select GROUP_CONCAT(name SEPARATOR ', ') FROM cp_isttr_mst WHERE isttr_seq in( SELECT isttr_seq FROM ed_edctn_isttr_rel WHERE edctn_seq=episd_mst.edctn_seq AND episd_year=episd_mst.episd_year AND episd_ord=episd_mst.episd_ord)) isttr_nm
			 , (select count(*) from ex_exam_qstn_dtl WHERE exam_seq = episd_mst.exam_seq) qstn_cnt
			 , (select count(*) from ep_edctn_exam_ptcpt_mst WHERE ptcpt_seq = ptcpt_mst.ptcpt_seq AND exam_seq = episd_mst.exam_seq) ptcpt_cnt
			 , (SELECT smmry_cntn FROM ex_exam_mst WHERE exam_seq = episd_mst.exam_seq) smmry_cntn
			<if test="siteGubun == 'admin'.toString()">
				, mem_mst.id
				, mem_mst.name
			</if>
		     ,episd_mst.cmptn_auto_yn
		     ,prcs_mst.cmptn_stnd_cd
		     ,(select code_mst.cd_nm from co_code_mst code_mst where code_mst.cd = prcs_mst.cmptn_stnd_cd and code_mst.cd_id = 'CMPTN_STND') cmptn_stnd_cd_nm
		     ,prcs_mst.cmptn_jdgmt_cd
		     ,(select code_mst.cd_nm from co_code_mst code_mst where code_mst.cd = prcs_mst.cmptn_jdgmt_cd and code_mst.cd_id = 'CMPTN_JDGMT') cmptn_jdgmt_cd_nm
		     , ptcpt_mst.exam_score
		FROM ep_edctn_ptcpt_mst ptcpt_mst JOIN ed_edctn_episd_mst episd_mst
											   ON episd_mst.edctn_seq = ptcpt_mst.edctn_seq AND episd_mst.episd_year = ptcpt_mst.episd_year AND episd_mst.episd_ord = ptcpt_mst.episd_ord
										  JOIN ed_edctn_prcs_mst prcs_mst ON prcs_mst.edctn_seq = ptcpt_mst.edctn_seq
										  JOIN co_mem_mst mem_mst on mem_mst.mem_seq = ptcpt_mst.mem_seq
		WHERE ptcpt_mst.ptcpt_seq = #{ptcptSeq} AND ptcpt_mst.mem_seq = #{memSeq}
		  <if test="siteGubun == 'front'.toString()">
		  	and ptcpt_mst.stts_cd = 'R' AND prcs_mst.jdgmt_yn = 'Y' AND NOW() between episd_mst.exam_strt_dtm and episd_mst.exam_end_dtm
		  </if>
	</select>

	<!--
         쿼리명 : EXGExamMapper.insertExamPtcptMst
         설  명 : 교육 시험 참여 등록
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="insertExamPtcptMst" parameterType="EXGExamEdctnPtcptRspnMst">
		insert /* EXGExamMapper.insertExamMst */ into ep_edctn_exam_ptcpt_mst
		(
			  exam_ptcpt_seq
			, ptcpt_seq
			, exam_seq
			, mem_seq
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		)
		values
		(
			  #{examPtcptSeq}
			, #{ptcptSeq}
			, #{examSeq}
			, #{memSeq}
			, #{regId}
			, #{regIp}
			, now()
			, #{regId}
			, #{regIp}
			, now()
		)
	</insert>

	<!--
         쿼리명 : EXGExamMapper.insertExamQstnRspnDtl
         설  명 : 교육 시험 주관식 답변 등록
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="insertExamQstnRspnDtl" parameterType="EXGExamEdctnPtcptRspnMst">
		insert /* EXGExamMapper.insertExamQstnRspnDtl */ into ep_edctn_qstn_rspn_dtl
		(
		  exam_ptcpt_seq
		, ptcpt_seq
		, exam_seq
		, qstn_seq
		, cansw_yn
		, qstn_score
		, reg_id
		, reg_ip
		, reg_dtm
		, mod_id
		, mod_ip
		, mod_dtm
		)
		values
		<foreach collection="qstnList" item="list" index="index" separator=" , " open="" close=";">
			(
			  #{examPtcptSeq}
			, #{ptcptSeq}
			, #{examSeq}
			, #{list.qstnSeq}
			, #{list.canswYn}
			, #{list.qstnScore}
			, #{regId}
			, #{regIp}
			, now()
			, #{regId}
			, #{regIp}
			, now()
			)
		</foreach>
	</insert>

	<!--
         쿼리명 : EXGExamMapper.insertExamPtcptSbjctRspnDtl
         설  명 : 교육 시험 주관식 답변 등록
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="insertExamPtcptSbjctRspnDtl" parameterType="EXGExamEdctnPtcptRspnMst">
		insert /* EXGExamMapper.insertExamPtcptSbjctRspnDtl */ into ep_edctn_sbjct_rspn_dtl
		(
			  exam_ptcpt_seq
			, ptcpt_seq
			, exam_seq
			, qstn_seq
			, sbjct_rply
		    , cansw_yn
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		)
		values
		<foreach collection="sbjctList" item="list" index="index" separator=" , " open="" close=";">
			(
			  #{examPtcptSeq}
			, #{ptcptSeq}
			, #{examSeq}
			, #{list.qstnSeq}
			, #{list.sbjctRply}
			, 'N'
			, #{regId}
			, #{regIp}
			, now()
			, #{regId}
			, #{regIp}
			, now()
			)
		</foreach>
	</insert>
	<!--
         쿼리명 : EXGExamMapper.updateExamPtcptQstnSbjctRspnDtl
         설  명 : 교육 시험 답변 정답 여부 수정
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="updateExamPtcptQstnSbjctRspnDtl" parameterType="EXGExamQstnRspnDtlDTO">
		update ep_edctn_qstn_rspn_dtl /*EXGExamMapper.updateExamPtcptQstnSbjctRspnDtl*/
		set cansw_yn = #{canswYn}
		, qstn_score = #{qstnScore}
		where ptcpt_seq = #{ptcptSeq} and qstn_seq = #{qstnSeq}
	</insert>
	<!--
         쿼리명 : EXGExamMapper.updateExamPtcptSbjctRspnDtl
         설  명 : 교육 시험 답변 주관식 정답 여부 수정
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="updateExamPtcptSbjctRspnDtl" parameterType="EXGExamQstnRspnDtlDTO">
		update ep_edctn_sbjct_rspn_dtl /*EXGExamMapper.updateExamPtcptSbjctRspnDtl*/
		set cansw_yn = #{canswYn}
		where ptcpt_seq = #{ptcptSeq} and qstn_seq = #{qstnSeq}
	</insert>

	<!--
         쿼리명 : EXGExamMapper.insertExamPtcptMtlccRspnDtl
         설  명 : 교육 시험 객관식 답변 등록
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<insert id="insertExamPtcptMtlccRspnDtl" parameterType="EXGExamEdctnPtcptRspnMst">
		insert /* EXGExamMapper.insertExamPtcptMtlccRspnDtl */ into ep_edctn_mtlcc_rspn_dtl
		(
			 exam_ptcpt_seq
			, ptcpt_seq
			, exam_seq
			, qstn_seq
			, exmpl_seq
			, cansw_yn
			, reg_id
			, reg_ip
			, reg_dtm
			, mod_id
			, mod_ip
			, mod_dtm
		)
		values
		<foreach collection="mtlccList" item="list" index="index" separator=" , " open="" close=";">
		(
			  #{examPtcptSeq}
			, #{ptcptSeq}
			, #{examSeq}
			, #{list.qstnSeq}
			, #{list.exmplSeq}
			, #{list.canswYn}
			, #{regId}
			, #{regIp}
			, now()
			, #{regId}
			, #{regIp}
			, now()
		)
		</foreach>
	</insert>

	<!--
         쿼리명 : EXGExamMapper.updateEdctnPtcptScord
         설  명 : 교육 참여 점수 변경
          수정일     수정자       수정내용
        ==========   ======    ==============
        2023.11.09    김학규       최초생성
    -->
	<update id="updateEdctnPtcptScord" parameterType="EXGExamEdctnPtcptRspnMst">
		update /* EXGExamMapper.updateEdctnPtcptScord */ ep_edctn_ptcpt_mst
		set
			exam_score = #{examScore}
		<if test="cmptnYn != null and cmptnYn == 'Y'.toString()">
			, cmptn_yn = #{cmptnYn}
		    , cmptn_dtm = now()
		</if>
		<if test="cmptnYn != null and cmptnYn == 'N'.toString()">
			, cmptn_yn = #{cmptnYn}
		</if>
		where
			ptcpt_seq = #{ptcptSeq}
	</update>

</mapper>


