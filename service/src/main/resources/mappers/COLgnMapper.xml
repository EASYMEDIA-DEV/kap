<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kap.service.dao.COLgnMapper">

	<!--
         쿼리명 : COLgnMapper.getLoginInfo
         설  명 : 로그인 정보를 가져온다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2020.10.23   허진영       최초생성
    -->
	<select id="getLoginInfo" parameterType="COLoginDTO" resultType="COAAdmDTO">
		select /* COLgnMapper.getLoginInfo */
			  adm_seq
			, auth_cd
			, dept_nm
			, id
			, pwd
			, name
            , allw_ip
			, pwd_chng_dtm
			, lgn_fail_cnt
			, tmp_pwd_yn
			, last_lgn_dtm
		    , lgn_crtfn_yn
			, use_yn
			, reg_dtm
		from
			co_adm_mst a
		where
			id = #{id}
	</select>

	<!--
         쿼리명 : COLgnMapper.actionLogin
         설  명 : 관리자 정보를 가져온다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2020.10.23   허진영       최초생성
    -->
	<select id="actionLogin" parameterType="COAAdmDTO" resultType="COUserDetailsDTO">
		select /* COLgnMapper.actionLogin */
			  adm_seq as seq
			, auth_cd
			, (select cd_nm from co_code_mst where cd_id = 'ADMIN_AUTH_CD' and cd = a.auth_cd) as auth_nm
		    , dept_cd
			, dept_nm
			, type_cd
			, (select cd_nm from co_code_mst where cd_id = 'ADMIN_TYPE_CD' and cd = a.type_cd) as type_nm
			, id
			, name
			, email
			, hp_no
			, allw_ip
			, last_lgn_dtm
			, gndr as gender
		from
			co_adm_mst a
		where 1=1
			and id = #{id}
		   	and pwd = #{pwd}
		   	and use_yn = 'Y'
	</select>

	<!--
         쿼리명 : COLgnMapper.updateLgnFailCntIncrs
         설  명 : 로그인 오류 횟수를 증가시킨다.
          수정일     수정자       수정내용 
        ==========   ======    ============== 
        2020.10.23   허진영       최초생성
    -->
	<update id="updateLgnFailCntIncrs" parameterType="COAAdmDTO">
		update /* COLgnMapper.updateLgnFailCntIncrs */ co_adm_mst
		set
			lgn_fail_cnt = ifnull(lgn_fail_cnt, 0) + 1
		where
			adm_seq = #{admSeq}
	</update>

	<!--
         쿼리명 : COLgnMapper.updateLgnFailCntInit
         설  명 :  로그인 오류 횟수를 초기화한다.
          수정일     수정자       수정내용 
        ==========   ======    ============== 
        2020.10.23   허진영       최초생성
    -->
	<update id="updateLgnFailCntInit" parameterType="COUserDetailsDTO">
		update /* COLgnMapper.updateLgnFailCntInit */ co_adm_mst
		set
			lgn_fail_cnt = 0
		where
			adm_seq = #{seq}
	</update>

	<!--
         쿼리명 : COLgnMapper.updateLastLgnDtm
         설  명 : 로그인 일시를 업데이트한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2020.10.23   허진영       최초생성
    -->
	<update id="updateLastLgnDtm" parameterType="COUserDetailsDTO">
		update /* COLgnMapper.updateLastLgnDtm */ co_adm_mst
		set
			last_lgn_dtm = now()
			, lgn_ssn_id = #{conSessionId}
		where
			adm_seq = #{seq}
	</update>

	<!--
         쿼리명 : COLgnMapper.updatePwdChng
         설  명 : 비밀번호를 변경한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2020.10.23   허진영       최초생성
    -->
	<update id="updatePwdChng" parameterType="COAAdmDTO">
		update /* COLgnMapper.updatePwdChng */ co_adm_mst
		set
			  pwd = #{newEncPwd}
			, pwd_chng_dtm = now()
			, tmp_pwd_yn = 'N'
			, last_lgn_dtm = now()
		WHERE
			adm_seq = #{admSeq}
	</update>

	<!--
         쿼리명 : COLgnMapper.getDriveMenuList
         설  명 : 드라이브 메뉴를 조회한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2020.10.23   허진영       최초생성
    -->
	<select id="getDriveMenuList" parameterType="COAAdmDTO" resultType="COMenuDTO">
		<choose>
			<when test="authCd eq '99'.toString()">
				select /* COLgnMapper.getDriveMenuList */
				menu_seq
				, parnt_seq
				, pstn
				, lft_val
				, rht_val
				, dpth
				, menu_type
				, menu_nm
				, adm_url
				, wnpp_yn
				from
				co_menu_mst
				where 1=1
				and menu_type = 'drive' and dpth = 1
				and use_yn = 'Y'
				order by
				lft_val
			</when>
			<otherwise>
				select /* COLgnMapper.getDriveMenuList */
				t1.menu_seq
				, t1.parnt_seq
				, t1.pstn
				, t1.lft_val
				, t1.rht_val
				, t1.dpth
				, t1.menu_type
				, t1.menu_nm
				, t1.adm_url
				, t1.wnpp_yn
				from
				co_menu_mst t1,
				(
				select
				a.menu_seq as chktreeid
				, a.parnt_seq as chkparenttreeid
				, a.adm_url as chkadminlinkurl
				, a.lft_val
				, a.rht_val
				from
				co_menu_mst a
				join co_adm_menu_dtl b on a.menu_seq = b.menu_seq
				where
				b.adm_seq = #{admSeq}
				) t2
				where 1=1
				and t2.lft_val between t1.lft_val and t1.rht_val
				and t1.menu_type = 'drive' and t1.dpth = 1
				and t1.use_yn = 'Y'
				group by
				t1.menu_seq, t1.parnt_seq, t1.pstn, t1.lft_val, t1.rht_val, t1.dpth, t1.menu_type, t1.menu_nm, t1.adm_url
				order by
				t1.lft_val
			</otherwise>
		</choose>
	</select>
	<!--
         쿼리명 : COLgnMapper.getUserMenuList
         설  명 : 사용자 메뉴 TYPE을 조회한다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2020.10.19   허진영       최초생성
    -->
	<select id="getUserMenuList" parameterType="COMenuDTO" resultType="COMenuDTO">
		select /* COLgnMapper.getUserMenuList */
			menu_seq
			 , parnt_seq
			 , pstn
			 , lft_val
			 , rht_val
			 , dpth
			 , menu_type
			 , menu_nm
			 , adm_url
			 , user_url
			 , use_yn
		from
			co_menu_mst a
		where
			menu_type = 'menu'
		order by lft_val
	</select>

	<!--
         쿼리명 : COLgnMapper.getMenuList
         설  명 : 로그인 처리에 따른 메뉴를 가져온다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2020.10.23   허진영       최초생성
    -->
	<select id="getMenuList" parameterType="COUserDetailsDTO" resultType="COMenuDTO">
		<choose>
			<when test="authCd eq '99'.toString()">
				select /* COLgnMapper.getMenuList */
				  a.menu_seq
				, a.parnt_seq
				, a.pstn
				, a.lft_val
				, a.rht_val
				, a.dpth
				, a.menu_type
				, a.menu_nm
				, a.adm_url
				, a.wnpp_yn
				from
				co_menu_mst a
				where 1=1
				and lft_val <![CDATA[ > ]]> (select lft_val from co_menu_mst where menu_seq = #{driveMenuSeq})
				and rht_val <![CDATA[ < ]]> (select rht_val from co_menu_mst where menu_seq = #{driveMenuSeq})
				<!--<if test="userMenuList != null">
					<foreach collection="userMenuList" item="menuList" index="index" separator=" AND " open="and (" close=")">
						!(lft_val <![CDATA[ > ]]> #{menuList.lftVal} and rht_val <![CDATA[ < ]]> #{menuList.rhtVal})
					</foreach>
				</if>-->
				and use_yn = 'Y'
				order by
				lft_val
			</when>
			<otherwise>
				select /* COLgnMapper.getmenulist */
					 t1.menu_seq
					, t1.parnt_seq
					, t1.pstn
					, t1.lft_val
					, t1.rht_val
					, t1.dpth
					, t1.menu_type
					, t1.menu_nm
					, t1.adm_url
					, t1.wnpp_yn
				from
				co_menu_mst t1,
				(
					select
					 a.menu_seq as chktreeid
					, a.parnt_seq as chkparenttreeid
					, a.adm_url as chkadminlinkurl
					, a.lft_val
					, a.rht_val
					from
					co_menu_mst a
					join co_adm_menu_dtl b on a.menu_seq = b.menu_seq
					where
					b.adm_seq = #{seq}
					and a.lft_val <![CDATA[ > ]]>  (select lft_val from co_menu_mst where menu_seq = #{driveMenuSeq} )
					and a.rht_val <![CDATA[ < ]]>  (select rht_val from co_menu_mst where menu_seq = #{driveMenuSeq} )
					/*사용자 메뉴는 노출하면 안됨*/
					<!--<if test="userMenuList != null">
						<foreach collection="userMenuList" item="menuList" index="index" separator=" AND " open="and (" close=")">
							!(lft_val <![CDATA[ > ]]> #{menuList.lftVal} and rht_val <![CDATA[ < ]]> #{menuList.rhtVal})
						</foreach>
					</if>-->
				) t2
				where
				        t2.lft_val between t1.lft_val and t1.rht_val
					and t1.use_yn = 'Y' AND t1.dpth <![CDATA[ > ]]> 1
	  			group by
	  				t1.menu_seq, t1.parnt_seq, t1.pstn, t1.lft_val, t1.rht_val, t1.dpth, t1.menu_type, t1.menu_nm, t1.adm_url
	  			order by
	  				t1.lft_val
			</otherwise>
		</choose>
	</select>

	<!--
         쿼리명 : COLgnMapper.getPwdHistoryCheck
         설  명 : 기존 비밀번호 사용여부 확인
          수정일     수정자       수정내용
        ==========   ======    ==============
        2022.04.25   신혜정       최초생성
    -->
	<select id="getPwdHistoryCheck" parameterType="COAAdmDTO" resultType="java.lang.String">
		select /* COLgnMapper.getPwdHistoryCheck */
			pwd.pwd_seq
		from
			co_adm_pwd_dtl pwd
			join co_adm_mst adm on pwd.adm_seq = adm.adm_seq
		where adm.id = #{id}
		  <if test="newEncPwd != null and newEncPwd != ''.toString() ">
			and pwd.pwd in (#{newEncPwd})
		  </if>
		order by pwd.ord
	</select>

	<!--
         쿼리명 : COLgnMapper.deletePwdHistory
         설  명 : 기존 비밀번호 초기값 삭제
          수정일     수정자       수정내용
        ==========   ======    ==============
        2022.04.25   신혜정       최초생성
    -->
	<delete id="deletePwdHistory" parameterType="COAAdmDTO">
		delete /* COLgnMapper.deletePwdHistory */  pwd
		from co_adm_pwd_dtl pwd join co_adm_mst adm on pwd.adm_seq = adm.adm_seq
		where
			adm.id = #{id}
		<if test="pwdList != null">
			and pwd_seq in
			<foreach collection="pwdList" item="pwdList" index="index" separator=" , " open=" (" close=")">
				#{pwdList}
			</foreach>
		</if>
	</delete>

	<!--
         쿼리명 : COLgnMapper.updatePwdHistory
         설  명 : 기존 비밀번호 정렬값 수정
          수정일     수정자       수정내용
        ==========   ======    ==============
        2022.04.25   신혜정       최초생성
    -->
	<update id="updatePwdHistory" parameterType="COAAdmDTO">
		update /* COLgnMapper.updatePwdHistory */
		    co_adm_pwd_dtl pwd
			join co_adm_mst adm on pwd.adm_seq = adm.adm_seq
		set
			pwd.ord = pwd.ord-1
		  , pwd.mod_dtm = now()
		  , pwd.mod_id = #{regId}
		  , pwd.mod_ip = #{regIp}
		where
			adm.id = #{id}
			<if test="pwdList != null">
				and pwd.pwd_seq in
				<foreach collection="pwdList" item="pwdList" index="index" separator=" , " open=" (" close=")">
					#{pwdList}
				</foreach>
			</if>
	</update>

	<!--
         쿼리명 : COLgnMapper.insertPwdHistory
         설  명 : 기존 비밀번호 삽입
          수정일     수정자       수정내용
        ==========   ======    ==============
        2022.04.25   신혜정       최초생성
    -->
	<insert id="insertPwdHistory" parameterType="COAAdmDTO" >
		<selectKey keyProperty="ord,admSeq" order="BEFORE" resultType="COAAdmDTO">
			select
			       ifnull(max(pwd.ord)+1, 1) as ord
			     , adm.adm_seq as admSeq
			from co_adm_pwd_dtl pwd right join co_adm_mst adm on pwd.adm_seq = adm.adm_seq
			where adm.id=#{id}
		</selectKey>
		insert 	/* COLgnMapper.insertPwdHistory */into co_adm_pwd_dtl
		(
			   adm_seq
			 , pwd
			 , ord
			 , reg_id
			 , reg_ip
			 , reg_dtm
			 , mod_id
			 , mod_ip
			 , mod_dtm
		)
		values
		(
			   #{admSeq}
			 , #{newEncPwd}
			 , #{ord}
			 , #{regId}
			 , #{regIp}
			 , now()
			 , #{regId}
			 , #{regIp}
			 , now()
		)
	</insert>

	<!--
         쿼리명 : COLgnMapper.getCmsRootInf
         설  명 : CMS Root 메뉴 정보를 가져온다.
          수정일     수정자       수정내용
        ==========   ======    ==============
        2099.99.99   &&&       최초생성
    -->
	<select id="getCmsRootInf" parameterType="COAAdmDTO" resultType="COMenuDTO">
		SELECT /* COLgnMapper.getCmsRootInf */
			MENU_SEQ
			 , LFT_VAL
			 , RHT_VAL
		FROM
			CO_MENU_MST
		WHERE 1=1
		  AND MENU_TYPE = 'menu'
		  AND USE_YN = 'Y'
		  AND LFT_VAL <![CDATA[>]]> (SELECT LFT_VAL FROM CO_MENU_MST WHERE MENU_SEQ = #{driveMenuSeq})
		  AND RHT_VAL <![CDATA[<]]> (SELECT RHT_VAL FROM CO_MENU_MST WHERE MENU_SEQ = #{driveMenuSeq})
	</select>

	<!--
         쿼리명 : COLgnMapper.getCmsList
         설  명 : CMS 메뉴 리스트 조회
          수정일     수정자       수정내용
        ==========   ======    ==============
        2024.04.05   장두석       최초생성
    -->
	<select id="getCmsList" parameterType="COUserDetailsDTO" resultType="COMenuDTO">
		SELECT /* COLgnMapper.getCmsList */
			MENU_SEQ
		FROM
			CO_MENU_MST
		WHERE 1=1
		  AND USE_YN = 'Y'
		  AND LFT_VAL <![CDATA[>]]> (SELECT LFT_VAL FROM CO_MENU_MST WHERE MENU_SEQ = #{driveMenuSeq})
		  AND RHT_VAL <![CDATA[<]]> (SELECT RHT_VAL FROM CO_MENU_MST WHERE MENU_SEQ = #{driveMenuSeq})
	</select>

	<!--
         쿼리명 : COLgnMapper.getCmsSeq
         설  명 : CMS 메뉴 시퀀스 조회
          수정일     수정자       수정내용
        ==========   ======    ==============
        2024.04.05   장두석       최초생성
    -->
	<select id="getCmsSeq" parameterType="COAAdmDTO" resultType="java.lang.String">
		SELECT /* COLgnMapper.getCmsSeq */
			MENU_SEQ
		FROM
			CO_MENU_MST
		WHERE 1=1
		  AND MENU_TYPE = 'menu'
		  AND USE_YN = 'Y'
	</select>

</mapper>