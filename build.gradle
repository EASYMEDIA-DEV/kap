buildscript {
    ext {
        springBootVersion = '2.7.15'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://maven.egovframe.go.kr/maven/"
            metadataSources {
                artifact()
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}



allprojects {
    apply plugin: 'java-library'

    group = 'com.kap'
    version = '1.0'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

    repositories {
        mavenCentral()
        maven {
            url "https://maven.egovframe.go.kr/maven/"
            metadataSources {
                artifact()
            }
        }
    }

    configurations {
        all {
            resolutionStrategy {
                failOnVersionConflict()
                force 'com.google.guava:guava:20.0', 'org.javassist:javassist:3.27.0-GA'
            }
        }
    }

}

subprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'war'


    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.apache.commons:commons-collections4:4.1'
        implementation 'com.integralblue:log4jdbc-spring-boot-starter:2.0.0'
        implementation 'com.googlecode.json-simple:json-simple:1.1.1'



        compileOnly 'org.projectlombok:lombok'

        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    test {
        useJUnitPlatform()
    }

}


project(":admin") {
    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.security:spring-security-config'
        implementation 'org.springframework.security:spring-security-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.apache.tiles:tiles-jsp:3.0.8'

        implementation 'javax.servlet:jstl'
        implementation 'org.springframework.security:spring-security-taglibs'
        /* MOBILE */
        implementation 'org.springframework.mobile:spring-mobile-device:1.1.3.RELEASE'

        //SWAGGER
        implementation "org.springdoc:springdoc-openapi-ui:1.6.2"
        implementation "org.springdoc:springdoc-openapi-security:1.6.2"

        /*ScheduleLock*/
        implementation "net.javacrumbs.shedlock:shedlock-spring:4.46.0"
        implementation "net.javacrumbs.shedlock:shedlock-provider-jdbc-template:4.46.0"

        /* QR */
        implementation group: 'com.google.zxing', name: 'javase', version: '3.5.0'
        implementation group: 'com.google.zxing', name: 'core', version: '3.5.0'


        implementation project(':common')
        implementation project(':error')
        implementation project(':service')

        // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
        annotationProcessor("jakarta.persistence:jakarta.persistence-api")
        // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
        annotationProcessor("jakarta.annotation:jakarta.annotation-api")
        runtimeOnly('org.springframework.boot:spring-boot-devtools')
        runtimeOnly('org.springframework.boot:spring-boot-starter-tomcat')
        runtimeOnly 'com.mysql:mysql-connector-j'
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
        providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'
        providedRuntime 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.0'
    }
    bootWar.enabled = false
    war.enabled = true
}

project(":client") {
    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.security:spring-security-config'
        implementation 'org.springframework.security:spring-security-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'org.apache.tiles:tiles-jsp:3.0.8'

        implementation 'javax.servlet:jstl'
        implementation 'org.springframework.security:spring-security-taglibs'
        /* MOBILE */
        implementation 'org.springframework.mobile:spring-mobile-device:1.1.3.RELEASE'

        //SWAGGER
        implementation "org.springdoc:springdoc-openapi-ui:1.6.2"
        implementation "org.springdoc:springdoc-openapi-security:1.6.2"


        implementation project(':common')
        implementation project(':error')
        implementation project(':service')

        // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
        annotationProcessor("jakarta.persistence:jakarta.persistence-api")
        // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
        annotationProcessor("jakarta.annotation:jakarta.annotation-api")
        runtimeOnly('org.springframework.boot:spring-boot-devtools')
        runtimeOnly('org.springframework.boot:spring-boot-starter-tomcat')
        runtimeOnly 'com.mysql:mysql-connector-j'
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
        providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'
        providedRuntime 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.0'
    }
    bootWar.enabled = false
    war.enabled = true
}

//에러
project(":error") {
    dependencies {
        implementation "org.springdoc:springdoc-openapi-ui:1.6.2"
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-security'
    }
    bootWar.enabled = false
    war.enabled = true
}

project(":common") {
    dependencies {
        implementation('com.navercorp.lucy:lucy-xss-servlet:2.0.1') {
            exclude group: "commons-logging", module: 'commons-logging'
        }
        implementation 'org.springframework.boot:spring-boot-starter-web'
        runtimeOnly('org.springframework.boot:spring-boot-devtools')
    }
    //단독으로 실행되지 않으므로 해당 모듈 라이브러리화
    bootWar.enabled = false
    war.enabled = true
}

project(":service") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'
        //implementation 'com.integralblue:log4jdbc-spring-boot-starter:2.0.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'javax.persistence:javax.persistence-api'

        //전자정부표준프레임워크 idgen
        implementation 'org.egovframe.rte:org.egovframe.rte.psl.dataaccess:4.0.0'
        implementation 'org.egovframe.rte:org.egovframe.rte.fdl.idgnr:4.0.0'
        implementation 'org.egovframe.rte:org.egovframe.rte.fdl.property:4.0.0'
        implementation 'org.egovframe.rte:org.egovframe.rte.fdl.cmmn:4.0.0'
        implementation 'org.egovframe.rte:org.egovframe.rte.ptl.mvc:4.0.0'

        implementation('com.navercorp.lucy:lucy-xss-servlet:2.0.1') {
            exclude group: "commons-logging", module: 'commons-logging'
        }
        implementation 'com.navercorp.lucy:lucy-xss:1.6.3'
        //StringEscapeUtils 를 사용하기 위해 commons-text 의존성 추가
        implementation 'org.apache.commons:commons-text:1.8'
        /* XSSFWorkBook */
        implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
        /* VELOCITY html(템플릿) */
        implementation 'org.apache.velocity:velocity:1.7'
        /* MIME-TYPE 확인 */
        implementation 'org.apache.tika:tika-core:2.9.0'
        //SWAGGER
        implementation "org.springdoc:springdoc-openapi-ui:1.6.2"

        implementation project(':common')
    }
    //단독으로 실행되지 않으므로 해당 모듈 라이브러리화
    bootWar.enabled = false
    war.enabled = true
}
